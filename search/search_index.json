{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Kotlin Android Architecture Library - Kaal - by eMan Usage All artifacts are available and distributed by using the jcenter() You should you artifact which you need. E.g. a domain artifact you will use in your domain layer, but you can use it also in data and infrastructure, because you need e.g. instance to the Result class. Kaal Core // Gradle Kotlin DSL implementation(\"cz.eman.kaal:kaal-core:0.6.0\") implementation 'cz.eman.kaal:kaal-core:0.6.0' TBD Kaal Domain // Gradle Kotlin DSL implementation(\"cz.eman.kaal:kaal-domain:0.6.0\") implementation 'cz.eman.kaal:kaal-domain:0.6.0' TBD Kaal Presentation // Gradle Kotlin DSL implementation(\"cz.eman.kaal:kaal-presentation:0.6.0\") implementation 'cz.eman.kaal:kaal-presentation:0.6.0' TBD Kaal Infrastructure // Gradle Kotlin DSL implementation(\"cz.eman.kaal:kaal-infrastructure:0.6.0\") implementation 'cz.eman.kaal:kaal-infrastructure:0.6.0' TBD Responsible Persons Vaclav Souhrada Roman Holomek Stefan Toth Filip \u0160m\u00edd","title":"Overview"},{"location":"#kotlin-android-architecture-library-kaal-by-eman","text":"","title":"Kotlin Android Architecture Library - Kaal - by eMan"},{"location":"#usage","text":"All artifacts are available and distributed by using the jcenter() You should you artifact which you need. E.g. a domain artifact you will use in your domain layer, but you can use it also in data and infrastructure, because you need e.g. instance to the Result class.","title":"Usage"},{"location":"#kaal-core","text":"// Gradle Kotlin DSL implementation(\"cz.eman.kaal:kaal-core:0.6.0\") implementation 'cz.eman.kaal:kaal-core:0.6.0' TBD","title":"Kaal Core"},{"location":"#kaal-domain","text":"// Gradle Kotlin DSL implementation(\"cz.eman.kaal:kaal-domain:0.6.0\") implementation 'cz.eman.kaal:kaal-domain:0.6.0' TBD","title":"Kaal Domain"},{"location":"#kaal-presentation","text":"// Gradle Kotlin DSL implementation(\"cz.eman.kaal:kaal-presentation:0.6.0\") implementation 'cz.eman.kaal:kaal-presentation:0.6.0' TBD","title":"Kaal Presentation"},{"location":"#kaal-infrastructure","text":"// Gradle Kotlin DSL implementation(\"cz.eman.kaal:kaal-infrastructure:0.6.0\") implementation 'cz.eman.kaal:kaal-infrastructure:0.6.0' TBD","title":"Kaal Infrastructure"},{"location":"#responsible-persons","text":"Vaclav Souhrada Roman Holomek Stefan Toth Filip \u0160m\u00edd","title":"Responsible Persons"},{"location":"changelog/","text":"Change Log 0.6.0 (2020-01-27) Changed Kotlin Coroutines updated to v1.3.3 Retrofit updated to v2.7.1 Gradle updated to v6.1.1 Added :sparkles: The SingleLiveEvent (A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages.) is back :) New extension function ViewGroup.inflate to allows call like: viewGroup.inflate(R.layout.exchange_rates_view) Removed The Espresso has been removed from Kaal (not used) 0.5.0 (2019-12-03) Added :sparkles: #5 : You can define Fragment or Activity layout id by using a constructor ```kotlin class MainActivity : BaseActivity(R.layout.activity_main) // Fragment class MyFragment: BaseFragment(R.layout.fragment_my) ``` Changed Koin updated to v1.3.61 Koin updated to v2.0.1 Gradle 5.6.4 Removed API Break: The ScopeAware has been removed. Since Koin 2.0.1 you should use official Scope API by Koin. 0.4.0 (2019-10-07) Changed Api Break: cz.eman.kaal.domain.Result and subclasses has been moved into cz.eman.kaal.domain.result.Result . This a new Result has a new functionality to remove boilerplate code. Also all classes which are using Result has been changed Dependencies update: Kotlin 1.3.50 Kotlin Coroutines 1.3.2 Espresso 3.0.2 Added Added a new function fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: String? = null, map: (Dto) -> T): Result<T> to remove a boilerplate code when you're calling a server by using a retrofit. Old usage with callSafe override suspend fun getPopularMovies() = callSafe( call = { fetchPopularMovies() }, errorMessage = \"Cannot fetch popular movies\" ) and old way to call remote API private suspend fun fetchPopularMovies(): Result<List<Movie>> { val response = movieApiService.getPopularMovies().awaitResponse() return if (response.isSuccessful) { val body = response.body() if (body != null) { Result.Success(data = MoviesMapper.mapWrapperToMovie(body)) } else { Result.Error( ApiErrorResult( code = response.code(), errorMessage = response.message(), apiThrowable = EmptyBodyException() ) ) } } else { val errorResult = ApiErrorResult(code = response.code(), errorMessage = response.message()) logError { \"Cannot fetch popular movies[$errorResult]\" } Result.Error(errorResult) } } By using callResult you will remove boilerplate code above override suspend fun getPopularMovies() = callResult( responseCall = { movieApiService.getPopularMovies()} ) { MoviesMapper.mapWrapperToMovie(it) } You can also define your custom error message by a defining an attribute errorMessage : override suspend fun getPopularMovies() = callResult( responseCall = { movieApiService.getPopularMovies()}, errorMessage = \"Cannot get a popular movies!\" ) { MoviesMapper.mapWrapperToMovie(it) } A new way how to create the Result.Error . There is a couple of standard functions but if you want to create ErrorResult without that you will define your own MyCustomErrorResult you can use this approach Result.error( errorCode = MovieErrorCode.INVALID_USER_CREDENTIALS, message = \"Invalid username or password\" ) which is similar to code below Result.Error( ErrorResult( code = MovieErrorCode.INVALID_USER_CREDENTIALS, message = \"Invalid username or password\" ) ) New HttpStatusErrorCode which define all HTTP error codes. You can use it by your own. In case of that you are using callSafe or callResult - response will be parsed automatically for you with these error codes 0.3.0 (2019-09-13) Added Added view extension functions ( hide(), show(), invisible(), hideKeyboard() Added a new view ext. function TextView.textWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on Added CalendarExtensions functions to avoid boilerplate code when you are working with the Calendar core : Added exhaustive helper to force a when statement to assert all options are matched in a when statement. when(sealedObject) { is OneType -> // is AnotherType -> // }.exhaustive 0.2.0 (2019-08-25) Added News in the cz.eman.kaal.domain.Result : New function getOrNull() which return data in case of that are available (from remote call or local call) , otherwise null is returned. and server request. Introducing a Fragment's Arguments: You can use this feature to easily create and handle a fragments arguments ```kotlin class PropertyDelegateFragment : Fragment() { private var userName by argument () private var email by argument () private var booksCount by argument () companion object { fun create(userName: String, email: String, booksCount: Int = 0) = PropertyDelegateFragment().apply { this.userName = userName this.email = email this.booksCount = booksCount } } override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? { return inflater.inflate(R.layout.fragment_arguments_demo, container, false) } override fun onActivityCreated(savedInstanceState: Bundle?) { super.onActivityCreated(savedInstanceState) nameTextView.text = userName emailTextView.text = email booksCountTextView.text = booksCount.toString() addBookButton.setOnClickListener { booksCount++ booksCountTextView.text = booksCount.toString() } } } ``` Changed The Result.Error has now output a generic parameter T Kotlin 1.3.40 Fixed Coroutines scope in a base classes 0.1.0 (2019-05-29) Initial version","title":"Changelog"},{"location":"changelog/#change-log","text":"","title":"Change Log"},{"location":"changelog/#060-2020-01-27","text":"","title":"0.6.0 (2020-01-27)"},{"location":"changelog/#changed","text":"Kotlin Coroutines updated to v1.3.3 Retrofit updated to v2.7.1 Gradle updated to v6.1.1","title":"Changed"},{"location":"changelog/#added","text":":sparkles: The SingleLiveEvent (A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages.) is back :) New extension function ViewGroup.inflate to allows call like: viewGroup.inflate(R.layout.exchange_rates_view)","title":"Added"},{"location":"changelog/#removed","text":"The Espresso has been removed from Kaal (not used)","title":"Removed"},{"location":"changelog/#050-2019-12-03","text":"","title":"0.5.0 (2019-12-03)"},{"location":"changelog/#added_1","text":":sparkles: #5 : You can define Fragment or Activity layout id by using a constructor ```kotlin class MainActivity : BaseActivity(R.layout.activity_main) // Fragment class MyFragment: BaseFragment(R.layout.fragment_my) ```","title":"Added"},{"location":"changelog/#changed_1","text":"Koin updated to v1.3.61 Koin updated to v2.0.1 Gradle 5.6.4","title":"Changed"},{"location":"changelog/#removed_1","text":"API Break: The ScopeAware has been removed. Since Koin 2.0.1 you should use official Scope API by Koin.","title":"Removed"},{"location":"changelog/#040-2019-10-07","text":"","title":"0.4.0 (2019-10-07)"},{"location":"changelog/#changed_2","text":"Api Break: cz.eman.kaal.domain.Result and subclasses has been moved into cz.eman.kaal.domain.result.Result . This a new Result has a new functionality to remove boilerplate code. Also all classes which are using Result has been changed Dependencies update: Kotlin 1.3.50 Kotlin Coroutines 1.3.2 Espresso 3.0.2","title":"Changed"},{"location":"changelog/#added_2","text":"Added a new function fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: String? = null, map: (Dto) -> T): Result<T> to remove a boilerplate code when you're calling a server by using a retrofit. Old usage with callSafe override suspend fun getPopularMovies() = callSafe( call = { fetchPopularMovies() }, errorMessage = \"Cannot fetch popular movies\" ) and old way to call remote API private suspend fun fetchPopularMovies(): Result<List<Movie>> { val response = movieApiService.getPopularMovies().awaitResponse() return if (response.isSuccessful) { val body = response.body() if (body != null) { Result.Success(data = MoviesMapper.mapWrapperToMovie(body)) } else { Result.Error( ApiErrorResult( code = response.code(), errorMessage = response.message(), apiThrowable = EmptyBodyException() ) ) } } else { val errorResult = ApiErrorResult(code = response.code(), errorMessage = response.message()) logError { \"Cannot fetch popular movies[$errorResult]\" } Result.Error(errorResult) } } By using callResult you will remove boilerplate code above override suspend fun getPopularMovies() = callResult( responseCall = { movieApiService.getPopularMovies()} ) { MoviesMapper.mapWrapperToMovie(it) } You can also define your custom error message by a defining an attribute errorMessage : override suspend fun getPopularMovies() = callResult( responseCall = { movieApiService.getPopularMovies()}, errorMessage = \"Cannot get a popular movies!\" ) { MoviesMapper.mapWrapperToMovie(it) } A new way how to create the Result.Error . There is a couple of standard functions but if you want to create ErrorResult without that you will define your own MyCustomErrorResult you can use this approach Result.error( errorCode = MovieErrorCode.INVALID_USER_CREDENTIALS, message = \"Invalid username or password\" ) which is similar to code below Result.Error( ErrorResult( code = MovieErrorCode.INVALID_USER_CREDENTIALS, message = \"Invalid username or password\" ) ) New HttpStatusErrorCode which define all HTTP error codes. You can use it by your own. In case of that you are using callSafe or callResult - response will be parsed automatically for you with these error codes","title":"Added"},{"location":"changelog/#030-2019-09-13","text":"","title":"0.3.0 (2019-09-13)"},{"location":"changelog/#added_3","text":"Added view extension functions ( hide(), show(), invisible(), hideKeyboard() Added a new view ext. function TextView.textWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on Added CalendarExtensions functions to avoid boilerplate code when you are working with the Calendar core : Added exhaustive helper to force a when statement to assert all options are matched in a when statement. when(sealedObject) { is OneType -> // is AnotherType -> // }.exhaustive","title":"Added"},{"location":"changelog/#020-2019-08-25","text":"","title":"0.2.0 (2019-08-25)"},{"location":"changelog/#added_4","text":"News in the cz.eman.kaal.domain.Result : New function getOrNull() which return data in case of that are available (from remote call or local call) , otherwise null is returned. and server request. Introducing a Fragment's Arguments: You can use this feature to easily create and handle a fragments arguments ```kotlin class PropertyDelegateFragment : Fragment() { private var userName by argument () private var email by argument () private var booksCount by argument () companion object { fun create(userName: String, email: String, booksCount: Int = 0) = PropertyDelegateFragment().apply { this.userName = userName this.email = email this.booksCount = booksCount } } override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? { return inflater.inflate(R.layout.fragment_arguments_demo, container, false) } override fun onActivityCreated(savedInstanceState: Bundle?) { super.onActivityCreated(savedInstanceState) nameTextView.text = userName emailTextView.text = email booksCountTextView.text = booksCount.toString() addBookButton.setOnClickListener { booksCount++ booksCountTextView.text = booksCount.toString() } } } ```","title":"Added"},{"location":"changelog/#changed_3","text":"The Result.Error has now output a generic parameter T Kotlin 1.3.40","title":"Changed"},{"location":"changelog/#fixed","text":"Coroutines scope in a base classes","title":"Fixed"},{"location":"changelog/#010-2019-05-29","text":"Initial version","title":"0.1.0 (2019-05-29)"},{"location":"0.x/core/","text":"core Packages Name Summary cz.eman.kaal.core.util Index All Types","title":"core"},{"location":"0.x/core/#packages","text":"Name Summary cz.eman.kaal.core.util","title":"Packages"},{"location":"0.x/core/#index","text":"All Types","title":"Index"},{"location":"0.x/core/alltypes/","text":"All Types Name Summary (extensions in package cz.eman.kaal.core.util) java.util.Calendar | (extensions in package cz.eman.kaal.core.util) kotlin.Long","title":"Index"},{"location":"0.x/core/alltypes/#all-types","text":"Name Summary (extensions in package cz.eman.kaal.core.util)","title":"All Types"},{"location":"0.x/core/alltypes/#javautilcalendar","text":"| (extensions in package cz.eman.kaal.core.util)","title":"java.util.Calendar"},{"location":"0.x/core/alltypes/#kotlinlong","text":"","title":"kotlin.Long"},{"location":"0.x/core/cz.eman.kaal.core.util/","text":"core / cz.eman.kaal.core.util Package cz.eman.kaal.core.util Extensions for External Classes Name Summary java.util.Calendar kotlin.Long Properties Name Summary exhaustive Note: This helper is taken from the Plaid val <T> T.exhaustive: T","title":"Index"},{"location":"0.x/core/cz.eman.kaal.core.util/#package-czemankaalcoreutil","text":"","title":"Package cz.eman.kaal.core.util"},{"location":"0.x/core/cz.eman.kaal.core.util/#extensions-for-external-classes","text":"Name Summary java.util.Calendar kotlin.Long","title":"Extensions for External Classes"},{"location":"0.x/core/cz.eman.kaal.core.util/#properties","text":"Name Summary exhaustive Note: This helper is taken from the Plaid val <T> T.exhaustive: T","title":"Properties"},{"location":"0.x/core/cz.eman.kaal.core.util/exhaustive/","text":"core / cz.eman.kaal.core.util / exhaustive exhaustive val <T> T.exhaustive: T Note: This helper is taken from the Plaid Helper to force a when statement to assert all options are matched in a when statement. By default, Kotlin doesn't care if all branches are handled in a when statement. However, if you use the when statement as an expression (with a value) it will force all cases to be handled. This helper is to make a lightweight way to say you meant to match all of them. Usage: when(sealedObject) { is OneType -> // is AnotherType -> // }.exhaustive Since 0.3.0","title":"Exhaustive"},{"location":"0.x/core/cz.eman.kaal.core.util/exhaustive/#exhaustive","text":"val <T> T.exhaustive: T Note: This helper is taken from the Plaid Helper to force a when statement to assert all options are matched in a when statement. By default, Kotlin doesn't care if all branches are handled in a when statement. However, if you use the when statement as an expression (with a value) it will force all cases to be handled. This helper is to make a lightweight way to say you meant to match all of them. Usage: when(sealedObject) { is OneType -> // is AnotherType -> // }.exhaustive Since 0.3.0","title":"exhaustive"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/","text":"core / cz.eman.kaal.core.util / java.util.Calendar Extensions for java.util.Calendar Name Summary cloneCalendar fun Calendar .cloneCalendar(): Calendar dayOfMonth val Calendar .dayOfMonth: Int dayOfYear val Calendar .dayOfYear: Int isDayGreaterThan fun Calendar .isDayGreaterThan(calendar: Calendar ): Boolean isDayLessThan fun Calendar .isDayLessThan(calendar: Calendar ): Boolean isSameDay fun Calendar .isSameDay(calendar: Calendar ): Boolean month val Calendar .month: Int normalize fun Calendar .normalize(): Calendar year val Calendar .year: Int","title":"Index"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/#extensions-for-javautilcalendar","text":"Name Summary cloneCalendar fun Calendar .cloneCalendar(): Calendar dayOfMonth val Calendar .dayOfMonth: Int dayOfYear val Calendar .dayOfYear: Int isDayGreaterThan fun Calendar .isDayGreaterThan(calendar: Calendar ): Boolean isDayLessThan fun Calendar .isDayLessThan(calendar: Calendar ): Boolean isSameDay fun Calendar .isSameDay(calendar: Calendar ): Boolean month val Calendar .month: Int normalize fun Calendar .normalize(): Calendar year val Calendar .year: Int","title":"Extensions for java.util.Calendar"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/clone-calendar/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / cloneCalendar cloneCalendar fun Calendar .cloneCalendar(): Calendar Since 0.3.0","title":"Clone calendar"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/clone-calendar/#clonecalendar","text":"fun Calendar .cloneCalendar(): Calendar Since 0.3.0","title":"cloneCalendar"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/day-of-month/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / dayOfMonth dayOfMonth val Calendar .dayOfMonth: Int","title":"Day of month"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/day-of-month/#dayofmonth","text":"val Calendar .dayOfMonth: Int","title":"dayOfMonth"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/day-of-year/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / dayOfYear dayOfYear val Calendar .dayOfYear: Int","title":"Day of year"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/day-of-year/#dayofyear","text":"val Calendar .dayOfYear: Int","title":"dayOfYear"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/is-day-greater-than/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / isDayGreaterThan isDayGreaterThan fun Calendar .isDayGreaterThan(calendar: Calendar ): Boolean Since 0.3.0","title":"Is day greater than"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/is-day-greater-than/#isdaygreaterthan","text":"fun Calendar .isDayGreaterThan(calendar: Calendar ): Boolean Since 0.3.0","title":"isDayGreaterThan"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/is-day-less-than/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / isDayLessThan isDayLessThan fun Calendar .isDayLessThan(calendar: Calendar ): Boolean Since 0.3.0","title":"Is day less than"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/is-day-less-than/#isdaylessthan","text":"fun Calendar .isDayLessThan(calendar: Calendar ): Boolean Since 0.3.0","title":"isDayLessThan"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/is-same-day/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / isSameDay isSameDay fun Calendar .isSameDay(calendar: Calendar ): Boolean Since 0.3.0","title":"Is same day"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/is-same-day/#issameday","text":"fun Calendar .isSameDay(calendar: Calendar ): Boolean Since 0.3.0","title":"isSameDay"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/month/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / month month val Calendar .month: Int","title":"Month"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/month/#month","text":"val Calendar .month: Int","title":"month"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/normalize/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / normalize normalize fun Calendar .normalize(): Calendar","title":"Normalize"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/normalize/#normalize","text":"fun Calendar .normalize(): Calendar","title":"normalize"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/year/","text":"core / cz.eman.kaal.core.util / java.util.Calendar / year year val Calendar .year: Int","title":"Year"},{"location":"0.x/core/cz.eman.kaal.core.util/java.util.-calendar/year/#year","text":"val Calendar .year: Int","title":"year"},{"location":"0.x/core/cz.eman.kaal.core.util/kotlin.-long/","text":"core / cz.eman.kaal.core.util / kotlin.Long Extensions for kotlin.Long Name Summary timestampToCalendar fun Long .timestampToCalendar(): Calendar","title":"Index"},{"location":"0.x/core/cz.eman.kaal.core.util/kotlin.-long/#extensions-for-kotlinlong","text":"Name Summary timestampToCalendar fun Long .timestampToCalendar(): Calendar","title":"Extensions for kotlin.Long"},{"location":"0.x/core/cz.eman.kaal.core.util/kotlin.-long/timestamp-to-calendar/","text":"core / cz.eman.kaal.core.util / kotlin.Long / timestampToCalendar timestampToCalendar fun Long .timestampToCalendar(): Calendar","title":"Timestamp to calendar"},{"location":"0.x/core/cz.eman.kaal.core.util/kotlin.-long/timestamp-to-calendar/#timestamptocalendar","text":"fun Long .timestampToCalendar(): Calendar","title":"timestampToCalendar"},{"location":"0.x/domain/","text":"domain Packages Name Summary cz.eman.kaal.domain.exception cz.eman.kaal.domain.mapper cz.eman.kaal.domain.result cz.eman.kaal.domain.usecases Index All Types","title":"domain"},{"location":"0.x/domain/#packages","text":"Name Summary cz.eman.kaal.domain.exception cz.eman.kaal.domain.mapper cz.eman.kaal.domain.result cz.eman.kaal.domain.usecases","title":"Packages"},{"location":"0.x/domain/#index","text":"All Types","title":"Index"},{"location":"0.x/domain/alltypes/","text":"All Types Name Summary cz.eman.kaal.domain.result.ApiErrorResult | cz.eman.kaal.domain.result.DataResult | cz.eman.kaal.domain.exception.EmptyBodyException Exception that there is an empty body inside of response | cz.eman.kaal.domain.result.ErrorCode | cz.eman.kaal.domain.result.ErrorResult | cz.eman.kaal.domain.result.HttpStatusErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . | cz.eman.kaal.domain.mapper.Mapper An abstract class which should be implemented by a simple mapper with one specific object | cz.eman.kaal.domain.result.Result val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) | cz.eman.kaal.domain.usecases.UseCase Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). | cz.eman.kaal.domain.usecases.UseCaseNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). | cz.eman.kaal.domain.usecases.UseCaseResult Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). | cz.eman.kaal.domain.usecases.UseCaseResultNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract).","title":"Index"},{"location":"0.x/domain/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"0.x/domain/alltypes/#czemankaaldomainresultapierrorresult","text":"|","title":"cz.eman.kaal.domain.result.ApiErrorResult"},{"location":"0.x/domain/alltypes/#czemankaaldomainresultdataresult","text":"|","title":"cz.eman.kaal.domain.result.DataResult"},{"location":"0.x/domain/alltypes/#czemankaaldomainexceptionemptybodyexception","text":"Exception that there is an empty body inside of response |","title":"cz.eman.kaal.domain.exception.EmptyBodyException"},{"location":"0.x/domain/alltypes/#czemankaaldomainresulterrorcode","text":"|","title":"cz.eman.kaal.domain.result.ErrorCode"},{"location":"0.x/domain/alltypes/#czemankaaldomainresulterrorresult","text":"|","title":"cz.eman.kaal.domain.result.ErrorResult"},{"location":"0.x/domain/alltypes/#czemankaaldomainresulthttpstatuserrorcode","text":"The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . |","title":"cz.eman.kaal.domain.result.HttpStatusErrorCode"},{"location":"0.x/domain/alltypes/#czemankaaldomainmappermapper","text":"An abstract class which should be implemented by a simple mapper with one specific object |","title":"cz.eman.kaal.domain.mapper.Mapper"},{"location":"0.x/domain/alltypes/#czemankaaldomainresultresult","text":"val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) |","title":"cz.eman.kaal.domain.result.Result"},{"location":"0.x/domain/alltypes/#czemankaaldomainusecasesusecase","text":"Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). |","title":"cz.eman.kaal.domain.usecases.UseCase"},{"location":"0.x/domain/alltypes/#czemankaaldomainusecasesusecasenoparams","text":"Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). |","title":"cz.eman.kaal.domain.usecases.UseCaseNoParams"},{"location":"0.x/domain/alltypes/#czemankaaldomainusecasesusecaseresult","text":"Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). |","title":"cz.eman.kaal.domain.usecases.UseCaseResult"},{"location":"0.x/domain/alltypes/#czemankaaldomainusecasesusecaseresultnoparams","text":"Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract).","title":"cz.eman.kaal.domain.usecases.UseCaseResultNoParams"},{"location":"0.x/domain/cz.eman.kaal.domain.exception/","text":"domain / cz.eman.kaal.domain.exception Package cz.eman.kaal.domain.exception Exceptions Name Summary EmptyBodyException Exception that there is an empty body inside of response class EmptyBodyException : IOException","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.exception/#package-czemankaaldomainexception","text":"","title":"Package cz.eman.kaal.domain.exception"},{"location":"0.x/domain/cz.eman.kaal.domain.exception/#exceptions","text":"Name Summary EmptyBodyException Exception that there is an empty body inside of response class EmptyBodyException : IOException","title":"Exceptions"},{"location":"0.x/domain/cz.eman.kaal.domain.exception/-empty-body-exception/","text":"domain / cz.eman.kaal.domain.exception / EmptyBodyException EmptyBodyException class EmptyBodyException : IOException Exception that there is an empty body inside of response Author Roman Holomek <> Since 1.0.0 Constructors Name Summary <init> Exception that there is an empty body inside of response EmptyBodyException()","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.exception/-empty-body-exception/#emptybodyexception","text":"class EmptyBodyException : IOException Exception that there is an empty body inside of response Author Roman Holomek <> Since 1.0.0","title":"EmptyBodyException"},{"location":"0.x/domain/cz.eman.kaal.domain.exception/-empty-body-exception/#constructors","text":"Name Summary <init> Exception that there is an empty body inside of response EmptyBodyException()","title":"Constructors"},{"location":"0.x/domain/cz.eman.kaal.domain.exception/-empty-body-exception/-init-/","text":"domain / cz.eman.kaal.domain.exception / EmptyBodyException / <init> <init> EmptyBodyException() Exception that there is an empty body inside of response Author Roman Holomek <> Since 1.0.0","title":" init "},{"location":"0.x/domain/cz.eman.kaal.domain.exception/-empty-body-exception/-init-/#init","text":"EmptyBodyException() Exception that there is an empty body inside of response Author Roman Holomek <> Since 1.0.0","title":"&lt;init&gt;"},{"location":"0.x/domain/cz.eman.kaal.domain.mapper/","text":"domain / cz.eman.kaal.domain.mapper Package cz.eman.kaal.domain.mapper Types Name Summary Mapper An abstract class which should be implemented by a simple mapper with one specific object abstract class Mapper<in T, out R>","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.mapper/#package-czemankaaldomainmapper","text":"","title":"Package cz.eman.kaal.domain.mapper"},{"location":"0.x/domain/cz.eman.kaal.domain.mapper/#types","text":"Name Summary Mapper An abstract class which should be implemented by a simple mapper with one specific object abstract class Mapper<in T, out R>","title":"Types"},{"location":"0.x/domain/cz.eman.kaal.domain.mapper/-mapper/","text":"domain / cz.eman.kaal.domain.mapper / Mapper Mapper abstract class Mapper<in T, out R> An abstract class which should be implemented by a simple mapper with one specific object Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0 Constructors Name Summary <init> An abstract class which should be implemented by a simple mapper with one specific object Mapper() Functions Name Summary mapFrom abstract fun mapFrom(from: T): R","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.mapper/-mapper/#mapper","text":"abstract class Mapper<in T, out R> An abstract class which should be implemented by a simple mapper with one specific object Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"Mapper"},{"location":"0.x/domain/cz.eman.kaal.domain.mapper/-mapper/#constructors","text":"Name Summary <init> An abstract class which should be implemented by a simple mapper with one specific object Mapper()","title":"Constructors"},{"location":"0.x/domain/cz.eman.kaal.domain.mapper/-mapper/#functions","text":"Name Summary mapFrom abstract fun mapFrom(from: T): R","title":"Functions"},{"location":"0.x/domain/cz.eman.kaal.domain.mapper/-mapper/-init-/","text":"domain / cz.eman.kaal.domain.mapper / Mapper / <init> <init> Mapper() An abstract class which should be implemented by a simple mapper with one specific object Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":" init "},{"location":"0.x/domain/cz.eman.kaal.domain.mapper/-mapper/-init-/#init","text":"Mapper() An abstract class which should be implemented by a simple mapper with one specific object Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"&lt;init&gt;"},{"location":"0.x/domain/cz.eman.kaal.domain.mapper/-mapper/map-from/","text":"domain / cz.eman.kaal.domain.mapper / Mapper / mapFrom mapFrom abstract fun mapFrom(from: T): R","title":"Map from"},{"location":"0.x/domain/cz.eman.kaal.domain.mapper/-mapper/map-from/#mapfrom","text":"abstract fun mapFrom(from: T): R","title":"mapFrom"},{"location":"0.x/domain/cz.eman.kaal.domain.result/","text":"domain / cz.eman.kaal.domain.result Package cz.eman.kaal.domain.result Types Name Summary ApiErrorResult data class ApiErrorResult : ErrorResult DataResult data class DataResult<T> ErrorCode interface ErrorCode ErrorResult open class ErrorResult HttpStatusErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . enum class HttpStatusErrorCode : ErrorCode Result val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) <br> sealed class Result<out T> | Functions Name Summary callSafe Wrap a suspending call in try/catch. In case an exception is thrown, a Result.Error is created based on the errorCore and the errorMessage . suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCore: ErrorCode = ErrorCode.UNDEFINED, errorMessage: String ): Result <T>``suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCode: ErrorCode = ErrorCode.UNDEFINED, lazyMessage: () -> Any ): Result <T> errorCode The error code builder fun errorCode(code: Int ): ErrorCode","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.result/#package-czemankaaldomainresult","text":"","title":"Package cz.eman.kaal.domain.result"},{"location":"0.x/domain/cz.eman.kaal.domain.result/#types","text":"Name Summary ApiErrorResult data class ApiErrorResult : ErrorResult DataResult data class DataResult<T> ErrorCode interface ErrorCode ErrorResult open class ErrorResult HttpStatusErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . enum class HttpStatusErrorCode : ErrorCode Result val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) <br> sealed class Result<out T> |","title":"Types"},{"location":"0.x/domain/cz.eman.kaal.domain.result/#functions","text":"Name Summary callSafe Wrap a suspending call in try/catch. In case an exception is thrown, a Result.Error is created based on the errorCore and the errorMessage . suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCore: ErrorCode = ErrorCode.UNDEFINED, errorMessage: String ): Result <T>``suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCode: ErrorCode = ErrorCode.UNDEFINED, lazyMessage: () -> Any ): Result <T> errorCode The error code builder fun errorCode(code: Int ): ErrorCode","title":"Functions"},{"location":"0.x/domain/cz.eman.kaal.domain.result/call-safe/","text":"domain / cz.eman.kaal.domain.result / callSafe callSafe suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCore: ErrorCode = ErrorCode.UNDEFINED, errorMessage: String ): Result <T> Wrap a suspending call in try/catch. In case an exception is thrown, a Result.Error is created based on the errorCore and the errorMessage . suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCode: ErrorCode = ErrorCode.UNDEFINED, lazyMessage: () -> Any ): Result <T> Since 0.4.0 See Also callSafe","title":"Call safe"},{"location":"0.x/domain/cz.eman.kaal.domain.result/call-safe/#callsafe","text":"suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCore: ErrorCode = ErrorCode.UNDEFINED, errorMessage: String ): Result <T> Wrap a suspending call in try/catch. In case an exception is thrown, a Result.Error is created based on the errorCore and the errorMessage . suspend fun <T : Any > callSafe(call: suspend () -> Result <T>, errorCode: ErrorCode = ErrorCode.UNDEFINED, lazyMessage: () -> Any ): Result <T> Since 0.4.0 See Also callSafe","title":"callSafe"},{"location":"0.x/domain/cz.eman.kaal.domain.result/error-code/","text":"domain / cz.eman.kaal.domain.result / errorCode errorCode fun errorCode(code: Int ): ErrorCode The error code builder Parameters code - Integer representation of the error See Also ErrorCode","title":"Error code"},{"location":"0.x/domain/cz.eman.kaal.domain.result/error-code/#errorcode","text":"fun errorCode(code: Int ): ErrorCode The error code builder","title":"errorCode"},{"location":"0.x/domain/cz.eman.kaal.domain.result/error-code/#parameters","text":"code - Integer representation of the error See Also ErrorCode","title":"Parameters"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/","text":"domain / cz.eman.kaal.domain.result / ApiErrorResult ApiErrorResult data class ApiErrorResult : ErrorResult Author Roman Holomek <> Constructors Name Summary <init> ApiErrorResult(code: ErrorCode , message: String ? = null, throwable: Throwable ? = null) Properties Name Summary code val code: ErrorCode message val message: String ? throwable val throwable: Throwable ?","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/#apierrorresult","text":"data class ApiErrorResult : ErrorResult Author Roman Holomek <>","title":"ApiErrorResult"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/#constructors","text":"Name Summary <init> ApiErrorResult(code: ErrorCode , message: String ? = null, throwable: Throwable ? = null)","title":"Constructors"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/#properties","text":"Name Summary code val code: ErrorCode message val message: String ? throwable val throwable: Throwable ?","title":"Properties"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/-init-/","text":"domain / cz.eman.kaal.domain.result / ApiErrorResult / <init> <init> ApiErrorResult(code: ErrorCode , message: String ? = null, throwable: Throwable ? = null) Author Roman Holomek <>","title":" init "},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/-init-/#init","text":"ApiErrorResult(code: ErrorCode , message: String ? = null, throwable: Throwable ? = null) Author Roman Holomek <>","title":"&lt;init&gt;"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/code/","text":"domain / cz.eman.kaal.domain.result / ApiErrorResult / code code val code: ErrorCode","title":"Code"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/code/#code","text":"val code: ErrorCode","title":"code"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/message/","text":"domain / cz.eman.kaal.domain.result / ApiErrorResult / message message val message: String ?","title":"Message"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/message/#message","text":"val message: String ?","title":"message"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/throwable/","text":"domain / cz.eman.kaal.domain.result / ApiErrorResult / throwable throwable val throwable: Throwable ?","title":"Throwable"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-api-error-result/throwable/#throwable","text":"val throwable: Throwable ?","title":"throwable"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-data-result/","text":"domain / cz.eman.kaal.domain.result / DataResult DataResult data class DataResult<T> Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0 Constructors Name Summary <init> DataResult(data: T) Properties Name Summary data val data: T","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-data-result/#dataresult","text":"data class DataResult<T> Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"DataResult"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-data-result/#constructors","text":"Name Summary <init> DataResult(data: T)","title":"Constructors"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-data-result/#properties","text":"Name Summary data val data: T","title":"Properties"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-data-result/-init-/","text":"domain / cz.eman.kaal.domain.result / DataResult / <init> <init> DataResult(data: T) Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":" init "},{"location":"0.x/domain/cz.eman.kaal.domain.result/-data-result/-init-/#init","text":"DataResult(data: T) Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"&lt;init&gt;"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-data-result/data/","text":"domain / cz.eman.kaal.domain.result / DataResult / data data val data: T","title":"Data"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-data-result/data/#data","text":"val data: T","title":"data"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-code/","text":"domain / cz.eman.kaal.domain.result / ErrorCode ErrorCode interface ErrorCode Properties Name Summary value Integer representation of the error abstract val value: Int Companion Object Properties Name Summary UNDEFINED val UNDEFINED: ErrorCode Inheritors Name Summary HttpStatusErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . enum class HttpStatusErrorCode : ErrorCode","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-code/#errorcode","text":"interface ErrorCode","title":"ErrorCode"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-code/#properties","text":"Name Summary value Integer representation of the error abstract val value: Int","title":"Properties"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-code/#companion-object-properties","text":"Name Summary UNDEFINED val UNDEFINED: ErrorCode","title":"Companion Object Properties"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-code/#inheritors","text":"Name Summary HttpStatusErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . enum class HttpStatusErrorCode : ErrorCode","title":"Inheritors"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-code/-u-n-d-e-f-i-n-e-d/","text":"domain / cz.eman.kaal.domain.result / ErrorCode / UNDEFINED UNDEFINED val UNDEFINED: ErrorCode","title":" u n d e f i n e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-code/-u-n-d-e-f-i-n-e-d/#undefined","text":"val UNDEFINED: ErrorCode","title":"UNDEFINED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-code/value/","text":"domain / cz.eman.kaal.domain.result / ErrorCode / value value abstract val value: Int Integer representation of the error","title":"Value"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-code/value/#value","text":"abstract val value: Int Integer representation of the error","title":"value"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/","text":"domain / cz.eman.kaal.domain.result / ErrorResult ErrorResult open class ErrorResult Constructors Name Summary <init> ErrorResult(code: ErrorCode = ErrorCode.UNDEFINED, message: String ? = null, throwable: Throwable ? = null) Properties Name Summary code open val code: ErrorCode message open val message: String ? throwable open val throwable: Throwable ? Inheritors Name Summary ApiErrorResult data class ApiErrorResult : ErrorResult","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/#errorresult","text":"open class ErrorResult","title":"ErrorResult"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/#constructors","text":"Name Summary <init> ErrorResult(code: ErrorCode = ErrorCode.UNDEFINED, message: String ? = null, throwable: Throwable ? = null)","title":"Constructors"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/#properties","text":"Name Summary code open val code: ErrorCode message open val message: String ? throwable open val throwable: Throwable ?","title":"Properties"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/#inheritors","text":"Name Summary ApiErrorResult data class ApiErrorResult : ErrorResult","title":"Inheritors"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/-init-/","text":"domain / cz.eman.kaal.domain.result / ErrorResult / <init> <init> ErrorResult(code: ErrorCode = ErrorCode.UNDEFINED, message: String ? = null, throwable: Throwable ? = null)","title":" init "},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/-init-/#init","text":"ErrorResult(code: ErrorCode = ErrorCode.UNDEFINED, message: String ? = null, throwable: Throwable ? = null)","title":"&lt;init&gt;"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/code/","text":"domain / cz.eman.kaal.domain.result / ErrorResult / code code open val code: ErrorCode","title":"Code"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/code/#code","text":"open val code: ErrorCode","title":"code"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/message/","text":"domain / cz.eman.kaal.domain.result / ErrorResult / message message open val message: String ?","title":"Message"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/message/#message","text":"open val message: String ?","title":"message"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/throwable/","text":"domain / cz.eman.kaal.domain.result / ErrorResult / throwable throwable open val throwable: Throwable ?","title":"Throwable"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-error-result/throwable/#throwable","text":"open val throwable: Throwable ?","title":"throwable"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode HttpStatusErrorCode enum class HttpStatusErrorCode : ErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . The types of error: 4xx: Client Error - The request contains bad syntax or cannot be fulfilled 5xx: Server Error - The server failed to fulfill an apparently valid request Author Filip \u0160m\u00edd Since 0.4.0 Enum Values Name Summary BAD_REQUEST UNAUTHORIZED PAYMENT_REQUIRED FORBIDDEN NOT_FOUND METHOD_NOT_ALLOWED NOT_ACCEPTABLE PROXY_AUTHENTICATION_REQUIRED REQUEST_TIMEOUT CONFLICT GONE LENGTH_REQUIRED PRECONDITION_FAILED PAYLOAD_TOO_LARGE URI_TOO_LONG UNSUPPORTED_MEDIA_TYPE RANGE_NOT_SATISFIABLE EXPECTATION_FAILED MISDIRECTED_REQUEST UNPROCESSABLE_ENTITY LOCKED FAILED_DEPENDENCY TOO_EARLY UPGRADE_REQUIRED PRECONDITION_REQUIRED TOO_MANY_REQUESTS REQUEST_HEADER_FIELDS_TOO_LARGE UNAVAILABLE_FOR_LEGAL_REASONS INTERNAL_SERVER_ERROR NOT_IMPLEMENTED BAD_GATEWAY SERVICE_UNAVAILABLE GATEWAY_TIMEOUT HTTP_VERSION_NOT_SUPPORTED VARIANT_ALSO_NEGOTIATES INSUFFICIENT_STORAGE LOOP_DETECTED NOT_EXTENDED NETWORK_AUTHENTICATION_REQUIRED Properties Name Summary value Integer representation of the error val value: Int Companion Object Functions Name Summary valueOf Returns the enum constant of this type with the specified value . fun valueOf(value: Int ): HttpStatusErrorCode","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/#httpstatuserrorcode","text":"enum class HttpStatusErrorCode : ErrorCode The enum defines standard HTTP status codes which represent client or server error. The codes are defined according to Internet standard . The types of error: 4xx: Client Error - The request contains bad syntax or cannot be fulfilled 5xx: Server Error - The server failed to fulfill an apparently valid request Author Filip \u0160m\u00edd Since 0.4.0","title":"HttpStatusErrorCode"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/#enum-values","text":"Name Summary BAD_REQUEST UNAUTHORIZED PAYMENT_REQUIRED FORBIDDEN NOT_FOUND METHOD_NOT_ALLOWED NOT_ACCEPTABLE PROXY_AUTHENTICATION_REQUIRED REQUEST_TIMEOUT CONFLICT GONE LENGTH_REQUIRED PRECONDITION_FAILED PAYLOAD_TOO_LARGE URI_TOO_LONG UNSUPPORTED_MEDIA_TYPE RANGE_NOT_SATISFIABLE EXPECTATION_FAILED MISDIRECTED_REQUEST UNPROCESSABLE_ENTITY LOCKED FAILED_DEPENDENCY TOO_EARLY UPGRADE_REQUIRED PRECONDITION_REQUIRED TOO_MANY_REQUESTS REQUEST_HEADER_FIELDS_TOO_LARGE UNAVAILABLE_FOR_LEGAL_REASONS INTERNAL_SERVER_ERROR NOT_IMPLEMENTED BAD_GATEWAY SERVICE_UNAVAILABLE GATEWAY_TIMEOUT HTTP_VERSION_NOT_SUPPORTED VARIANT_ALSO_NEGOTIATES INSUFFICIENT_STORAGE LOOP_DETECTED NOT_EXTENDED NETWORK_AUTHENTICATION_REQUIRED","title":"Enum Values"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/#properties","text":"Name Summary value Integer representation of the error val value: Int","title":"Properties"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/#companion-object-functions","text":"Name Summary valueOf Returns the enum constant of this type with the specified value . fun valueOf(value: Int ): HttpStatusErrorCode","title":"Companion Object Functions"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-b-a-d_-g-a-t-e-w-a-y/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / BAD_GATEWAY BAD_GATEWAY BAD_GATEWAY","title":" b a d  g a t e w a y"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-b-a-d_-g-a-t-e-w-a-y/#bad_gateway","text":"BAD_GATEWAY","title":"BAD_GATEWAY"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-b-a-d_-r-e-q-u-e-s-t/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / BAD_REQUEST BAD_REQUEST BAD_REQUEST","title":" b a d  r e q u e s t"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-b-a-d_-r-e-q-u-e-s-t/#bad_request","text":"BAD_REQUEST","title":"BAD_REQUEST"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-c-o-n-f-l-i-c-t/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / CONFLICT CONFLICT CONFLICT","title":" c o n f l i c t"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-c-o-n-f-l-i-c-t/#conflict","text":"CONFLICT","title":"CONFLICT"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-e-x-p-e-c-t-a-t-i-o-n_-f-a-i-l-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / EXPECTATION_FAILED EXPECTATION_FAILED EXPECTATION_FAILED","title":" e x p e c t a t i o n  f a i l e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-e-x-p-e-c-t-a-t-i-o-n_-f-a-i-l-e-d/#expectation_failed","text":"EXPECTATION_FAILED","title":"EXPECTATION_FAILED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-f-a-i-l-e-d_-d-e-p-e-n-d-e-n-c-y/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / FAILED_DEPENDENCY FAILED_DEPENDENCY FAILED_DEPENDENCY","title":" f a i l e d  d e p e n d e n c y"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-f-a-i-l-e-d_-d-e-p-e-n-d-e-n-c-y/#failed_dependency","text":"FAILED_DEPENDENCY","title":"FAILED_DEPENDENCY"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-f-o-r-b-i-d-d-e-n/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / FORBIDDEN FORBIDDEN FORBIDDEN","title":" f o r b i d d e n"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-f-o-r-b-i-d-d-e-n/#forbidden","text":"FORBIDDEN","title":"FORBIDDEN"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-g-a-t-e-w-a-y_-t-i-m-e-o-u-t/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / GATEWAY_TIMEOUT GATEWAY_TIMEOUT GATEWAY_TIMEOUT","title":" g a t e w a y  t i m e o u t"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-g-a-t-e-w-a-y_-t-i-m-e-o-u-t/#gateway_timeout","text":"GATEWAY_TIMEOUT","title":"GATEWAY_TIMEOUT"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-g-o-n-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / GONE GONE GONE","title":" g o n e"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-g-o-n-e/#gone","text":"GONE","title":"GONE"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-h-t-t-p_-v-e-r-s-i-o-n_-n-o-t_-s-u-p-p-o-r-t-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / HTTP_VERSION_NOT_SUPPORTED HTTP_VERSION_NOT_SUPPORTED HTTP_VERSION_NOT_SUPPORTED","title":" h t t p  v e r s i o n  n o t  s u p p o r t e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-h-t-t-p_-v-e-r-s-i-o-n_-n-o-t_-s-u-p-p-o-r-t-e-d/#http_version_not_supported","text":"HTTP_VERSION_NOT_SUPPORTED","title":"HTTP_VERSION_NOT_SUPPORTED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-i-n-s-u-f-f-i-c-i-e-n-t_-s-t-o-r-a-g-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / INSUFFICIENT_STORAGE INSUFFICIENT_STORAGE INSUFFICIENT_STORAGE","title":" i n s u f f i c i e n t  s t o r a g e"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-i-n-s-u-f-f-i-c-i-e-n-t_-s-t-o-r-a-g-e/#insufficient_storage","text":"INSUFFICIENT_STORAGE","title":"INSUFFICIENT_STORAGE"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-i-n-t-e-r-n-a-l_-s-e-r-v-e-r_-e-r-r-o-r/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / INTERNAL_SERVER_ERROR INTERNAL_SERVER_ERROR INTERNAL_SERVER_ERROR","title":" i n t e r n a l  s e r v e r  e r r o r"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-i-n-t-e-r-n-a-l_-s-e-r-v-e-r_-e-r-r-o-r/#internal_server_error","text":"INTERNAL_SERVER_ERROR","title":"INTERNAL_SERVER_ERROR"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-e-n-g-t-h_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / LENGTH_REQUIRED LENGTH_REQUIRED LENGTH_REQUIRED","title":" l e n g t h  r e q u i r e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-e-n-g-t-h_-r-e-q-u-i-r-e-d/#length_required","text":"LENGTH_REQUIRED","title":"LENGTH_REQUIRED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-o-c-k-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / LOCKED LOCKED LOCKED","title":" l o c k e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-o-c-k-e-d/#locked","text":"LOCKED","title":"LOCKED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-o-o-p_-d-e-t-e-c-t-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / LOOP_DETECTED LOOP_DETECTED LOOP_DETECTED","title":" l o o p  d e t e c t e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-l-o-o-p_-d-e-t-e-c-t-e-d/#loop_detected","text":"LOOP_DETECTED","title":"LOOP_DETECTED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-m-e-t-h-o-d_-n-o-t_-a-l-l-o-w-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / METHOD_NOT_ALLOWED METHOD_NOT_ALLOWED METHOD_NOT_ALLOWED","title":" m e t h o d  n o t  a l l o w e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-m-e-t-h-o-d_-n-o-t_-a-l-l-o-w-e-d/#method_not_allowed","text":"METHOD_NOT_ALLOWED","title":"METHOD_NOT_ALLOWED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-m-i-s-d-i-r-e-c-t-e-d_-r-e-q-u-e-s-t/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / MISDIRECTED_REQUEST MISDIRECTED_REQUEST MISDIRECTED_REQUEST","title":" m i s d i r e c t e d  r e q u e s t"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-m-i-s-d-i-r-e-c-t-e-d_-r-e-q-u-e-s-t/#misdirected_request","text":"MISDIRECTED_REQUEST","title":"MISDIRECTED_REQUEST"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-e-t-w-o-r-k_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / NETWORK_AUTHENTICATION_REQUIRED NETWORK_AUTHENTICATION_REQUIRED NETWORK_AUTHENTICATION_REQUIRED","title":" n e t w o r k  a u t h e n t i c a t i o n  r e q u i r e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-e-t-w-o-r-k_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d/#network_authentication_required","text":"NETWORK_AUTHENTICATION_REQUIRED","title":"NETWORK_AUTHENTICATION_REQUIRED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-a-c-c-e-p-t-a-b-l-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / NOT_ACCEPTABLE NOT_ACCEPTABLE NOT_ACCEPTABLE","title":" n o t  a c c e p t a b l e"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-a-c-c-e-p-t-a-b-l-e/#not_acceptable","text":"NOT_ACCEPTABLE","title":"NOT_ACCEPTABLE"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-e-x-t-e-n-d-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / NOT_EXTENDED NOT_EXTENDED NOT_EXTENDED","title":" n o t  e x t e n d e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-e-x-t-e-n-d-e-d/#not_extended","text":"NOT_EXTENDED","title":"NOT_EXTENDED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-f-o-u-n-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / NOT_FOUND NOT_FOUND NOT_FOUND","title":" n o t  f o u n d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-f-o-u-n-d/#not_found","text":"NOT_FOUND","title":"NOT_FOUND"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-i-m-p-l-e-m-e-n-t-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED","title":" n o t  i m p l e m e n t e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-n-o-t_-i-m-p-l-e-m-e-n-t-e-d/#not_implemented","text":"NOT_IMPLEMENTED","title":"NOT_IMPLEMENTED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-a-y-l-o-a-d_-t-o-o_-l-a-r-g-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / PAYLOAD_TOO_LARGE PAYLOAD_TOO_LARGE PAYLOAD_TOO_LARGE","title":" p a y l o a d  t o o  l a r g e"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-a-y-l-o-a-d_-t-o-o_-l-a-r-g-e/#payload_too_large","text":"PAYLOAD_TOO_LARGE","title":"PAYLOAD_TOO_LARGE"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-a-y-m-e-n-t_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / PAYMENT_REQUIRED PAYMENT_REQUIRED PAYMENT_REQUIRED","title":" p a y m e n t  r e q u i r e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-a-y-m-e-n-t_-r-e-q-u-i-r-e-d/#payment_required","text":"PAYMENT_REQUIRED","title":"PAYMENT_REQUIRED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-e-c-o-n-d-i-t-i-o-n_-f-a-i-l-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / PRECONDITION_FAILED PRECONDITION_FAILED PRECONDITION_FAILED","title":" p r e c o n d i t i o n  f a i l e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-e-c-o-n-d-i-t-i-o-n_-f-a-i-l-e-d/#precondition_failed","text":"PRECONDITION_FAILED","title":"PRECONDITION_FAILED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-e-c-o-n-d-i-t-i-o-n_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / PRECONDITION_REQUIRED PRECONDITION_REQUIRED PRECONDITION_REQUIRED","title":" p r e c o n d i t i o n  r e q u i r e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-e-c-o-n-d-i-t-i-o-n_-r-e-q-u-i-r-e-d/#precondition_required","text":"PRECONDITION_REQUIRED","title":"PRECONDITION_REQUIRED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-o-x-y_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / PROXY_AUTHENTICATION_REQUIRED PROXY_AUTHENTICATION_REQUIRED PROXY_AUTHENTICATION_REQUIRED","title":" p r o x y  a u t h e n t i c a t i o n  r e q u i r e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-p-r-o-x-y_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d/#proxy_authentication_required","text":"PROXY_AUTHENTICATION_REQUIRED","title":"PROXY_AUTHENTICATION_REQUIRED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-a-n-g-e_-n-o-t_-s-a-t-i-s-f-i-a-b-l-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / RANGE_NOT_SATISFIABLE RANGE_NOT_SATISFIABLE RANGE_NOT_SATISFIABLE","title":" r a n g e  n o t  s a t i s f i a b l e"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-a-n-g-e_-n-o-t_-s-a-t-i-s-f-i-a-b-l-e/#range_not_satisfiable","text":"RANGE_NOT_SATISFIABLE","title":"RANGE_NOT_SATISFIABLE"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-e-q-u-e-s-t_-h-e-a-d-e-r_-f-i-e-l-d-s_-t-o-o_-l-a-r-g-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / REQUEST_HEADER_FIELDS_TOO_LARGE REQUEST_HEADER_FIELDS_TOO_LARGE REQUEST_HEADER_FIELDS_TOO_LARGE","title":" r e q u e s t  h e a d e r  f i e l d s  t o o  l a r g e"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-e-q-u-e-s-t_-h-e-a-d-e-r_-f-i-e-l-d-s_-t-o-o_-l-a-r-g-e/#request_header_fields_too_large","text":"REQUEST_HEADER_FIELDS_TOO_LARGE","title":"REQUEST_HEADER_FIELDS_TOO_LARGE"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-e-q-u-e-s-t_-t-i-m-e-o-u-t/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / REQUEST_TIMEOUT REQUEST_TIMEOUT REQUEST_TIMEOUT","title":" r e q u e s t  t i m e o u t"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-r-e-q-u-e-s-t_-t-i-m-e-o-u-t/#request_timeout","text":"REQUEST_TIMEOUT","title":"REQUEST_TIMEOUT"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-s-e-r-v-i-c-e_-u-n-a-v-a-i-l-a-b-l-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / SERVICE_UNAVAILABLE SERVICE_UNAVAILABLE SERVICE_UNAVAILABLE","title":" s e r v i c e  u n a v a i l a b l e"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-s-e-r-v-i-c-e_-u-n-a-v-a-i-l-a-b-l-e/#service_unavailable","text":"SERVICE_UNAVAILABLE","title":"SERVICE_UNAVAILABLE"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-t-o-o_-e-a-r-l-y/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / TOO_EARLY TOO_EARLY TOO_EARLY","title":" t o o  e a r l y"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-t-o-o_-e-a-r-l-y/#too_early","text":"TOO_EARLY","title":"TOO_EARLY"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-t-o-o_-m-a-n-y_-r-e-q-u-e-s-t-s/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / TOO_MANY_REQUESTS TOO_MANY_REQUESTS TOO_MANY_REQUESTS","title":" t o o  m a n y  r e q u e s t s"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-t-o-o_-m-a-n-y_-r-e-q-u-e-s-t-s/#too_many_requests","text":"TOO_MANY_REQUESTS","title":"TOO_MANY_REQUESTS"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-a-u-t-h-o-r-i-z-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / UNAUTHORIZED UNAUTHORIZED UNAUTHORIZED","title":" u n a u t h o r i z e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-a-u-t-h-o-r-i-z-e-d/#unauthorized","text":"UNAUTHORIZED","title":"UNAUTHORIZED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-a-v-a-i-l-a-b-l-e_-f-o-r_-l-e-g-a-l_-r-e-a-s-o-n-s/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / UNAVAILABLE_FOR_LEGAL_REASONS UNAVAILABLE_FOR_LEGAL_REASONS UNAVAILABLE_FOR_LEGAL_REASONS","title":" u n a v a i l a b l e  f o r  l e g a l  r e a s o n s"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-a-v-a-i-l-a-b-l-e_-f-o-r_-l-e-g-a-l_-r-e-a-s-o-n-s/#unavailable_for_legal_reasons","text":"UNAVAILABLE_FOR_LEGAL_REASONS","title":"UNAVAILABLE_FOR_LEGAL_REASONS"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-p-r-o-c-e-s-s-a-b-l-e_-e-n-t-i-t-y/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / UNPROCESSABLE_ENTITY UNPROCESSABLE_ENTITY UNPROCESSABLE_ENTITY","title":" u n p r o c e s s a b l e  e n t i t y"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-p-r-o-c-e-s-s-a-b-l-e_-e-n-t-i-t-y/#unprocessable_entity","text":"UNPROCESSABLE_ENTITY","title":"UNPROCESSABLE_ENTITY"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-s-u-p-p-o-r-t-e-d_-m-e-d-i-a_-t-y-p-e/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / UNSUPPORTED_MEDIA_TYPE UNSUPPORTED_MEDIA_TYPE UNSUPPORTED_MEDIA_TYPE","title":" u n s u p p o r t e d  m e d i a  t y p e"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-n-s-u-p-p-o-r-t-e-d_-m-e-d-i-a_-t-y-p-e/#unsupported_media_type","text":"UNSUPPORTED_MEDIA_TYPE","title":"UNSUPPORTED_MEDIA_TYPE"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-p-g-r-a-d-e_-r-e-q-u-i-r-e-d/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / UPGRADE_REQUIRED UPGRADE_REQUIRED UPGRADE_REQUIRED","title":" u p g r a d e  r e q u i r e d"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-p-g-r-a-d-e_-r-e-q-u-i-r-e-d/#upgrade_required","text":"UPGRADE_REQUIRED","title":"UPGRADE_REQUIRED"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-r-i_-t-o-o_-l-o-n-g/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / URI_TOO_LONG URI_TOO_LONG URI_TOO_LONG","title":" u r i  t o o  l o n g"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-u-r-i_-t-o-o_-l-o-n-g/#uri_too_long","text":"URI_TOO_LONG","title":"URI_TOO_LONG"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-v-a-r-i-a-n-t_-a-l-s-o_-n-e-g-o-t-i-a-t-e-s/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / VARIANT_ALSO_NEGOTIATES VARIANT_ALSO_NEGOTIATES VARIANT_ALSO_NEGOTIATES","title":" v a r i a n t  a l s o  n e g o t i a t e s"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/-v-a-r-i-a-n-t_-a-l-s-o_-n-e-g-o-t-i-a-t-e-s/#variant_also_negotiates","text":"VARIANT_ALSO_NEGOTIATES","title":"VARIANT_ALSO_NEGOTIATES"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/value-of/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / valueOf valueOf fun valueOf(value: Int ): HttpStatusErrorCode Returns the enum constant of this type with the specified value . Parameters value - Integer representation of the error status Exceptions IllegalArgumentException - If this enum type has no constant with the specified value .","title":"Value of"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/value-of/#valueof","text":"fun valueOf(value: Int ): HttpStatusErrorCode Returns the enum constant of this type with the specified value .","title":"valueOf"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/value-of/#parameters","text":"value - Integer representation of the error status","title":"Parameters"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/value-of/#exceptions","text":"IllegalArgumentException - If this enum type has no constant with the specified value .","title":"Exceptions"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/value/","text":"domain / cz.eman.kaal.domain.result / HttpStatusErrorCode / value value val value: Int Integer representation of the error","title":"Value"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-http-status-error-code/value/#value","text":"val value: Int Integer representation of the error","title":"value"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/","text":"domain / cz.eman.kaal.domain.result / Result Result sealed class Result<out T> val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) Author vaclav.souhrada@eman.cz Since 0.1.0 Types Name Summary Error data class Error<out T> : Result <T> Success data class Success<out T> : Result <T> Functions Name Summary getOrNull Returns the encapsulated value if this instance represents Success or null is returned fun getOrNull(): T? isError fun isError(): Boolean isFinished fun isFinished(): Boolean isSuccess fun isSuccess(): Boolean toString open fun toString(): String Companion Object Functions Name Summary error fun <T> error(error: ErrorResult , data: T? = null): Result <T> fun <T> error(errorCode: ErrorCode , data: T? = null, message: String ? = null, throwable: Throwable ? = null): Result <T> success fun <T> success(data: T): Result <T>","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/#result","text":"sealed class Result<out T> val result = Result.Success(\"Hello World!\") val error = Result.Error(ErrorResult(\"Some error text\")) Author vaclav.souhrada@eman.cz Since 0.1.0","title":"Result"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/#types","text":"Name Summary Error data class Error<out T> : Result <T> Success data class Success<out T> : Result <T>","title":"Types"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/#functions","text":"Name Summary getOrNull Returns the encapsulated value if this instance represents Success or null is returned fun getOrNull(): T? isError fun isError(): Boolean isFinished fun isFinished(): Boolean isSuccess fun isSuccess(): Boolean toString open fun toString(): String","title":"Functions"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/#companion-object-functions","text":"Name Summary error fun <T> error(error: ErrorResult , data: T? = null): Result <T> fun <T> error(errorCode: ErrorCode , data: T? = null, message: String ? = null, throwable: Throwable ? = null): Result <T> success fun <T> success(data: T): Result <T>","title":"Companion Object Functions"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/error/","text":"domain / cz.eman.kaal.domain.result / Result / error error fun <T> error(error: ErrorResult , data: T? = null): Result <T> fun <T> error(errorCode: ErrorCode , data: T? = null, message: String ? = null, throwable: Throwable ? = null): Result <T>","title":"Error"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/error/#error","text":"fun <T> error(error: ErrorResult , data: T? = null): Result <T> fun <T> error(errorCode: ErrorCode , data: T? = null, message: String ? = null, throwable: Throwable ? = null): Result <T>","title":"error"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/get-or-null/","text":"domain / cz.eman.kaal.domain.result / Result / getOrNull getOrNull fun getOrNull(): T? Returns the encapsulated value if this instance represents Success or null is returned","title":"Get or null"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/get-or-null/#getornull","text":"fun getOrNull(): T? Returns the encapsulated value if this instance represents Success or null is returned","title":"getOrNull"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/is-error/","text":"domain / cz.eman.kaal.domain.result / Result / isError isError fun isError(): Boolean","title":"Is error"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/is-error/#iserror","text":"fun isError(): Boolean","title":"isError"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/is-finished/","text":"domain / cz.eman.kaal.domain.result / Result / isFinished isFinished fun isFinished(): Boolean","title":"Is finished"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/is-finished/#isfinished","text":"fun isFinished(): Boolean","title":"isFinished"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/is-success/","text":"domain / cz.eman.kaal.domain.result / Result / isSuccess isSuccess fun isSuccess(): Boolean","title":"Is success"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/is-success/#issuccess","text":"fun isSuccess(): Boolean","title":"isSuccess"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/success/","text":"domain / cz.eman.kaal.domain.result / Result / success success fun <T> success(data: T): Result <T>","title":"Success"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/success/#success","text":"fun <T> success(data: T): Result <T>","title":"success"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/to-string/","text":"domain / cz.eman.kaal.domain.result / Result / toString toString open fun toString(): String","title":"To string"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/to-string/#tostring","text":"open fun toString(): String","title":"toString"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-error/","text":"domain / cz.eman.kaal.domain.result / Result / Error Error data class Error<out T> : Result <T> Constructors Name Summary <init> Error(error: ErrorResult , data: T? = null) Properties Name Summary data val data: T? error val error: ErrorResult","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-error/#error","text":"data class Error<out T> : Result <T>","title":"Error"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-error/#constructors","text":"Name Summary <init> Error(error: ErrorResult , data: T? = null)","title":"Constructors"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-error/#properties","text":"Name Summary data val data: T? error val error: ErrorResult","title":"Properties"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-error/-init-/","text":"domain / cz.eman.kaal.domain.result / Result / Error / <init> <init> Error(error: ErrorResult , data: T? = null)","title":" init "},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-error/-init-/#init","text":"Error(error: ErrorResult , data: T? = null)","title":"&lt;init&gt;"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-error/data/","text":"domain / cz.eman.kaal.domain.result / Result / Error / data data val data: T?","title":"Data"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-error/data/#data","text":"val data: T?","title":"data"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-error/error/","text":"domain / cz.eman.kaal.domain.result / Result / Error / error error val error: ErrorResult","title":"Error"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-error/error/#error","text":"val error: ErrorResult","title":"error"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-success/","text":"domain / cz.eman.kaal.domain.result / Result / Success Success data class Success<out T> : Result <T> Constructors Name Summary <init> Success(data: T) Properties Name Summary data val data: T","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-success/#success","text":"data class Success<out T> : Result <T>","title":"Success"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-success/#constructors","text":"Name Summary <init> Success(data: T)","title":"Constructors"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-success/#properties","text":"Name Summary data val data: T","title":"Properties"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-success/-init-/","text":"domain / cz.eman.kaal.domain.result / Result / Success / <init> <init> Success(data: T)","title":" init "},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-success/-init-/#init","text":"Success(data: T)","title":"&lt;init&gt;"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-success/data/","text":"domain / cz.eman.kaal.domain.result / Result / Success / data data val data: T","title":"Data"},{"location":"0.x/domain/cz.eman.kaal.domain.result/-result/-success/data/#data","text":"val data: T","title":"data"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/","text":"domain / cz.eman.kaal.domain.usecases Package cz.eman.kaal.domain.usecases Types Name Summary UseCase Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCase<out T, in Params> UseCaseNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseNoParams<out T> : UseCase <T, Unit > UseCaseResult Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> UseCaseResultNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit >","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/#package-czemankaaldomainusecases","text":"","title":"Package cz.eman.kaal.domain.usecases"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/#types","text":"Name Summary UseCase Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCase<out T, in Params> UseCaseNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseNoParams<out T> : UseCase <T, Unit > UseCaseResult Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> UseCaseResultNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit >","title":"Types"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/","text":"domain / cz.eman.kaal.domain.usecases / UseCase UseCase abstract class UseCase<out T, in Params> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0 Constructors Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCase() Functions Name Summary doWork Inner business logic of UseCase abstract suspend fun doWork(params: Params): T invoke Executes appropriate implementation of UseCase , suspend operator fun invoke(params: Params): T Inheritors Name Summary UseCaseNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseNoParams<out T> : UseCase <T, Unit > UseCaseResult Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> UseCaseResultNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit >","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/#usecase","text":"abstract class UseCase<out T, in Params> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"UseCase"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/#constructors","text":"Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCase()","title":"Constructors"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/#functions","text":"Name Summary doWork Inner business logic of UseCase abstract suspend fun doWork(params: Params): T invoke Executes appropriate implementation of UseCase , suspend operator fun invoke(params: Params): T","title":"Functions"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/#inheritors","text":"Name Summary UseCaseNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseNoParams<out T> : UseCase <T, Unit > UseCaseResult Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> UseCaseResultNoParams Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit >","title":"Inheritors"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/-init-/","text":"domain / cz.eman.kaal.domain.usecases / UseCase / <init> <init> UseCase() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":" init "},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/-init-/#init","text":"UseCase() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"&lt;init&gt;"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/do-work/","text":"domain / cz.eman.kaal.domain.usecases / UseCase / doWork doWork protected abstract suspend fun doWork(params: Params): T Inner business logic of UseCase Parameters params - Set of input parameters Return type T of parameter. In the most common way the T is wrapped to a special use-case implementation.","title":"Do work"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/do-work/#dowork","text":"protected abstract suspend fun doWork(params: Params): T Inner business logic of UseCase","title":"doWork"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/do-work/#parameters","text":"params - Set of input parameters Return type T of parameter. In the most common way the T is wrapped to a special use-case implementation.","title":"Parameters"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/invoke/","text":"domain / cz.eman.kaal.domain.usecases / UseCase / invoke invoke suspend operator fun invoke(params: Params): T Executes appropriate implementation of UseCase , Parameters params - Set of input parameters Return type T of parameter. In the most common way the T is wrapped to a special use-case implementation.","title":"Invoke"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/invoke/#invoke","text":"suspend operator fun invoke(params: Params): T Executes appropriate implementation of UseCase ,","title":"invoke"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case/invoke/#parameters","text":"params - Set of input parameters Return type T of parameter. In the most common way the T is wrapped to a special use-case implementation.","title":"Parameters"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseNoParams UseCaseNoParams abstract class UseCaseNoParams<out T> : UseCase <T, Unit > Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz) Since 1.0.0 Constructors Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseNoParams() Functions Name Summary invoke suspend operator fun invoke(): T","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/#usecasenoparams","text":"abstract class UseCaseNoParams<out T> : UseCase <T, Unit > Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz) Since 1.0.0","title":"UseCaseNoParams"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/#constructors","text":"Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseNoParams()","title":"Constructors"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/#functions","text":"Name Summary invoke suspend operator fun invoke(): T","title":"Functions"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/-init-/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseNoParams / <init> <init> UseCaseNoParams() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz) Since 1.0.0","title":" init "},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/-init-/#init","text":"UseCaseNoParams() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz) Since 1.0.0","title":"&lt;init&gt;"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/invoke/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseNoParams / invoke invoke suspend operator fun invoke(): T","title":"Invoke"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-no-params/invoke/#invoke","text":"suspend operator fun invoke(): T","title":"invoke"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseResult UseCaseResult abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0 Constructors Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseResult()","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result/#usecaseresult","text":"abstract class UseCaseResult<out T : Any , in Params> : UseCase < Result <T>, Params> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"UseCaseResult"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result/#constructors","text":"Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseResult()","title":"Constructors"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result/-init-/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseResult / <init> <init> UseCaseResult() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":" init "},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result/-init-/#init","text":"UseCaseResult() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author vsouhrada (vaclav.souhrada@eman.cz) Since 1.0.0","title":"&lt;init&gt;"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseResultNoParams UseCaseResultNoParams abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit > Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz) Constructors Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseResultNoParams() Functions Name Summary invoke suspend operator fun invoke(): Result <T>","title":"Index"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/#usecaseresultnoparams","text":"abstract class UseCaseResultNoParams<out T : Any > : UseCase < Result <T>, Unit > Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz)","title":"UseCaseResultNoParams"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/#constructors","text":"Name Summary <init> Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). UseCaseResultNoParams()","title":"Constructors"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/#functions","text":"Name Summary invoke suspend operator fun invoke(): Result <T>","title":"Functions"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/-init-/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseResultNoParams / <init> <init> UseCaseResultNoParams() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz)","title":" init "},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/-init-/#init","text":"UseCaseResultNoParams() Abstract class for a Use Case (Interactor in terms of Clean Architecture). This class represents an execution unit for different use cases (this means any use case in the application should implement this contract). Use cases are the entry points to the domain layer. Author Roman Holomek (roman.holomek@eman.cz)","title":"&lt;init&gt;"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/invoke/","text":"domain / cz.eman.kaal.domain.usecases / UseCaseResultNoParams / invoke invoke suspend operator fun invoke(): Result <T>","title":"Invoke"},{"location":"0.x/domain/cz.eman.kaal.domain.usecases/-use-case-result-no-params/invoke/#invoke","text":"suspend operator fun invoke(): Result <T>","title":"invoke"},{"location":"0.x/infrastructure/","text":"infrastructure Packages Name Summary cz.eman.kaal.infrastructure.common cz.eman.kaal.infrastructure.coroutines.channels Index All Types","title":"infrastructure"},{"location":"0.x/infrastructure/#packages","text":"Name Summary cz.eman.kaal.infrastructure.common cz.eman.kaal.infrastructure.coroutines.channels","title":"Packages"},{"location":"0.x/infrastructure/#index","text":"All Types","title":"Index"},{"location":"0.x/infrastructure/alltypes/","text":"All Types Name Summary (extensions in package cz.eman.kaal.infrastructure.coroutines.channels) androidx.lifecycle.LiveData | cz.eman.kaal.infrastructure.coroutines.channels.LiveDataChannel Class for managing data flow from LiveData to Channel and closing operations","title":"Index"},{"location":"0.x/infrastructure/alltypes/#all-types","text":"Name Summary (extensions in package cz.eman.kaal.infrastructure.coroutines.channels)","title":"All Types"},{"location":"0.x/infrastructure/alltypes/#androidxlifecyclelivedata","text":"|","title":"androidx.lifecycle.LiveData"},{"location":"0.x/infrastructure/alltypes/#czemankaalinfrastructurecoroutineschannelslivedatachannel","text":"Class for managing data flow from LiveData to Channel and closing operations","title":"cz.eman.kaal.infrastructure.coroutines.channels.LiveDataChannel"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.common/","text":"infrastructure / cz.eman.kaal.infrastructure.common Package cz.eman.kaal.infrastructure.common Functions Name Summary callResult suspend fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: () -> String ?, map: (Dto) -> T): Result<T> errorApiResult fun <Dto, T> errorApiResult(response: Response<Dto>): Result<T> errorResult fun <T> errorResult(message: String , throwable: Throwable ?): Result<T>","title":"Index"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.common/#package-czemankaalinfrastructurecommon","text":"","title":"Package cz.eman.kaal.infrastructure.common"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.common/#functions","text":"Name Summary callResult suspend fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: () -> String ?, map: (Dto) -> T): Result<T> errorApiResult fun <Dto, T> errorApiResult(response: Response<Dto>): Result<T> errorResult fun <T> errorResult(message: String , throwable: Throwable ?): Result<T>","title":"Functions"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.common/call-result/","text":"infrastructure / cz.eman.kaal.infrastructure.common / callResult callResult suspend fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: () -> String ?, map: (Dto) -> T): Result<T> Author vsouhrada (vaclav.souhrada@eman.cz) Since 0.4.0","title":"Call result"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.common/call-result/#callresult","text":"suspend fun <Dto, T> callResult(responseCall: suspend () -> Response<Dto>, errorMessage: () -> String ?, map: (Dto) -> T): Result<T> Author vsouhrada (vaclav.souhrada@eman.cz) Since 0.4.0","title":"callResult"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.common/error-api-result/","text":"infrastructure / cz.eman.kaal.infrastructure.common / errorApiResult errorApiResult fun <Dto, T> errorApiResult(response: Response<Dto>): Result<T> Since 0.4.0","title":"Error api result"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.common/error-api-result/#errorapiresult","text":"fun <Dto, T> errorApiResult(response: Response<Dto>): Result<T> Since 0.4.0","title":"errorApiResult"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.common/error-result/","text":"infrastructure / cz.eman.kaal.infrastructure.common / errorResult errorResult fun <T> errorResult(message: String , throwable: Throwable ?): Result<T> Since 0.4.0","title":"Error result"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.common/error-result/#errorresult","text":"fun <T> errorResult(message: String , throwable: Throwable ?): Result<T> Since 0.4.0","title":"errorResult"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels Package cz.eman.kaal.infrastructure.coroutines.channels Types Name Summary LiveDataChannel Class for managing data flow from LiveData to Channel and closing operations class LiveDataChannel<T> : Observer<T?>, LifecycleObserver Extensions for External Classes Name Summary androidx.lifecycle.LiveData","title":"Index"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/#package-czemankaalinfrastructurecoroutineschannels","text":"","title":"Package cz.eman.kaal.infrastructure.coroutines.channels"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/#types","text":"Name Summary LiveDataChannel Class for managing data flow from LiveData to Channel and closing operations class LiveDataChannel<T> : Observer<T?>, LifecycleObserver","title":"Types"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/#extensions-for-external-classes","text":"Name Summary androidx.lifecycle.LiveData","title":"Extensions for External Classes"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / LiveDataChannel LiveDataChannel class LiveDataChannel<T> : Observer<T?>, LifecycleObserver Class for managing data flow from LiveData to Channel and closing operations Author Roman Holomek <> Constructors Name Summary <init> Class for managing data flow from LiveData to Channel and closing operations LiveDataChannel(liveData: LiveData<T>) Properties Name Summary channel val channel: Channel<T?> Functions Name Summary onChanged fun onChanged(t: T?): Unit onDestroy fun onDestroy(): Unit","title":"Index"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/#livedatachannel","text":"class LiveDataChannel<T> : Observer<T?>, LifecycleObserver Class for managing data flow from LiveData to Channel and closing operations Author Roman Holomek <>","title":"LiveDataChannel"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/#constructors","text":"Name Summary <init> Class for managing data flow from LiveData to Channel and closing operations LiveDataChannel(liveData: LiveData<T>)","title":"Constructors"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/#properties","text":"Name Summary channel val channel: Channel<T?>","title":"Properties"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/#functions","text":"Name Summary onChanged fun onChanged(t: T?): Unit onDestroy fun onDestroy(): Unit","title":"Functions"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/-init-/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / LiveDataChannel / <init> <init> LiveDataChannel(liveData: LiveData<T>) Class for managing data flow from LiveData to Channel and closing operations Author Roman Holomek <>","title":" init "},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/-init-/#init","text":"LiveDataChannel(liveData: LiveData<T>) Class for managing data flow from LiveData to Channel and closing operations Author Roman Holomek <>","title":"&lt;init&gt;"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/channel/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / LiveDataChannel / channel channel val channel: Channel<T?>","title":"Channel"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/channel/#channel","text":"val channel: Channel<T?>","title":"channel"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/on-changed/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / LiveDataChannel / onChanged onChanged fun onChanged(t: T?): Unit","title":"On changed"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/on-changed/#onchanged","text":"fun onChanged(t: T?): Unit","title":"onChanged"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/on-destroy/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / LiveDataChannel / onDestroy onDestroy fun onDestroy(): Unit","title":"On destroy"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/-live-data-channel/on-destroy/#ondestroy","text":"fun onDestroy(): Unit","title":"onDestroy"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/androidx.lifecycle.-live-data/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / androidx.lifecycle.LiveData Extensions for androidx.lifecycle.LiveData Name Summary observeChannel Extension functions for converting LiveData to coroutines Channel fun <T> LiveData<T>.observeChannel(lifecycleOwner: LifecycleOwner? = null): Channel<T?>","title":"Index"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/androidx.lifecycle.-live-data/#extensions-for-androidxlifecyclelivedata","text":"Name Summary observeChannel Extension functions for converting LiveData to coroutines Channel fun <T> LiveData<T>.observeChannel(lifecycleOwner: LifecycleOwner? = null): Channel<T?>","title":"Extensions for androidx.lifecycle.LiveData"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/androidx.lifecycle.-live-data/observe-channel/","text":"infrastructure / cz.eman.kaal.infrastructure.coroutines.channels / androidx.lifecycle.LiveData / observeChannel observeChannel fun <T> LiveData<T>.observeChannel(lifecycleOwner: LifecycleOwner? = null): Channel<T?> Extension functions for converting LiveData to coroutines Channel Parameters lifecycleOwner - for managing data flow and closing streams on destroy - NULL value ATTENTION!! Don't forget to close Channel when there is no need for data updates Author Roman Holomek <> Since 1.0.0","title":"Observe channel"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/androidx.lifecycle.-live-data/observe-channel/#observechannel","text":"fun <T> LiveData<T>.observeChannel(lifecycleOwner: LifecycleOwner? = null): Channel<T?> Extension functions for converting LiveData to coroutines Channel","title":"observeChannel"},{"location":"0.x/infrastructure/cz.eman.kaal.infrastructure.coroutines.channels/androidx.lifecycle.-live-data/observe-channel/#parameters","text":"lifecycleOwner - for managing data flow and closing streams on destroy - NULL value ATTENTION!! Don't forget to close Channel when there is no need for data updates Author Roman Holomek <> Since 1.0.0","title":"Parameters"},{"location":"0.x/presentation/","text":"presentation Packages Name Summary cz.eman.kaal.presentation.activity cz.eman.kaal.presentation.dialog cz.eman.kaal.presentation.fragment cz.eman.kaal.presentation.fragment.property cz.eman.kaal.presentation.lifecycle cz.eman.kaal.presentation.lifecycle.channels cz.eman.kaal.presentation.view cz.eman.kaal.presentation.viewmodel Index All Types","title":"presentation"},{"location":"0.x/presentation/#packages","text":"Name Summary cz.eman.kaal.presentation.activity cz.eman.kaal.presentation.dialog cz.eman.kaal.presentation.fragment cz.eman.kaal.presentation.fragment.property cz.eman.kaal.presentation.lifecycle cz.eman.kaal.presentation.lifecycle.channels cz.eman.kaal.presentation.view cz.eman.kaal.presentation.viewmodel","title":"Packages"},{"location":"0.x/presentation/#index","text":"All Types","title":"Index"},{"location":"0.x/presentation/alltypes/","text":"All Types Name Summary cz.eman.kaal.presentation.activity.BaseActivity | cz.eman.kaal.presentation.viewmodel.BaseAndroidViewModel | cz.eman.kaal.presentation.dialog.BaseDialogFragment | cz.eman.kaal.presentation.fragment.BaseFragment | cz.eman.kaal.presentation.viewmodel.BaseViewModel | cz.eman.kaal.presentation.view.DslTextWatcher A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. | (extensions in package cz.eman.kaal.presentation.fragment) androidx.fragment.app.Fragment | cz.eman.kaal.presentation.fragment.property.FragmentPropertyDelegate Easier way how to handle fragment's arguments Bundle by using this delegate | cz.eman.kaal.presentation.lifecycle.channels.LifecycleEventChannel ReceiveChannel emitting Lifecycle.Event updates | (extensions in package cz.eman.kaal.presentation.lifecycle.channels) androidx.lifecycle.LifecycleOwner | (extensions in package cz.eman.kaal.presentation.lifecycle.channels) kotlinx.coroutines.channels.ReceiveChannel | cz.eman.kaal.presentation.lifecycle.SingleLiveEvent A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. | (extensions in package cz.eman.kaal.presentation.view) android.widget.TextView | (extensions in package cz.eman.kaal.presentation.view) android.view.View | (extensions in package cz.eman.kaal.presentation.view) android.view.ViewGroup","title":"Index"},{"location":"0.x/presentation/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"0.x/presentation/alltypes/#czemankaalpresentationactivitybaseactivity","text":"|","title":"cz.eman.kaal.presentation.activity.BaseActivity"},{"location":"0.x/presentation/alltypes/#czemankaalpresentationviewmodelbaseandroidviewmodel","text":"|","title":"cz.eman.kaal.presentation.viewmodel.BaseAndroidViewModel"},{"location":"0.x/presentation/alltypes/#czemankaalpresentationdialogbasedialogfragment","text":"|","title":"cz.eman.kaal.presentation.dialog.BaseDialogFragment"},{"location":"0.x/presentation/alltypes/#czemankaalpresentationfragmentbasefragment","text":"|","title":"cz.eman.kaal.presentation.fragment.BaseFragment"},{"location":"0.x/presentation/alltypes/#czemankaalpresentationviewmodelbaseviewmodel","text":"|","title":"cz.eman.kaal.presentation.viewmodel.BaseViewModel"},{"location":"0.x/presentation/alltypes/#czemankaalpresentationviewdsltextwatcher","text":"A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. | (extensions in package cz.eman.kaal.presentation.fragment)","title":"cz.eman.kaal.presentation.view.DslTextWatcher"},{"location":"0.x/presentation/alltypes/#androidxfragmentappfragment","text":"|","title":"androidx.fragment.app.Fragment"},{"location":"0.x/presentation/alltypes/#czemankaalpresentationfragmentpropertyfragmentpropertydelegate","text":"Easier way how to handle fragment's arguments Bundle by using this delegate |","title":"cz.eman.kaal.presentation.fragment.property.FragmentPropertyDelegate"},{"location":"0.x/presentation/alltypes/#czemankaalpresentationlifecyclechannelslifecycleeventchannel","text":"ReceiveChannel emitting Lifecycle.Event updates | (extensions in package cz.eman.kaal.presentation.lifecycle.channels)","title":"cz.eman.kaal.presentation.lifecycle.channels.LifecycleEventChannel"},{"location":"0.x/presentation/alltypes/#androidxlifecyclelifecycleowner","text":"| (extensions in package cz.eman.kaal.presentation.lifecycle.channels)","title":"androidx.lifecycle.LifecycleOwner"},{"location":"0.x/presentation/alltypes/#kotlinxcoroutineschannelsreceivechannel","text":"|","title":"kotlinx.coroutines.channels.ReceiveChannel"},{"location":"0.x/presentation/alltypes/#czemankaalpresentationlifecyclesingleliveevent","text":"A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. | (extensions in package cz.eman.kaal.presentation.view)","title":"cz.eman.kaal.presentation.lifecycle.SingleLiveEvent"},{"location":"0.x/presentation/alltypes/#androidwidgettextview","text":"| (extensions in package cz.eman.kaal.presentation.view)","title":"android.widget.TextView"},{"location":"0.x/presentation/alltypes/#androidviewview","text":"| (extensions in package cz.eman.kaal.presentation.view)","title":"android.view.View"},{"location":"0.x/presentation/alltypes/#androidviewviewgroup","text":"","title":"android.view.ViewGroup"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/","text":"presentation / cz.eman.kaal.presentation.activity Package cz.eman.kaal.presentation.activity Types Name Summary BaseActivity abstract class BaseActivity : AppCompatActivity, CoroutineScope","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/#package-czemankaalpresentationactivity","text":"","title":"Package cz.eman.kaal.presentation.activity"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/#types","text":"Name Summary BaseActivity abstract class BaseActivity : AppCompatActivity, CoroutineScope","title":"Types"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/-base-activity/","text":"presentation / cz.eman.kaal.presentation.activity / BaseActivity BaseActivity abstract class BaseActivity : AppCompatActivity, CoroutineScope Author vsouhrada (vaclav.souhrada@eman.cz) See Also AppCompatActivity Since 0.1.0 Constructors Name Summary <init> BaseActivity() BaseActivity(contentLayoutId: Int ) Properties Name Summary coroutineContext open val coroutineContext: CoroutineContext Functions Name Summary onDestroy open fun onDestroy(): Unit","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/-base-activity/#baseactivity","text":"abstract class BaseActivity : AppCompatActivity, CoroutineScope Author vsouhrada (vaclav.souhrada@eman.cz) See Also AppCompatActivity Since 0.1.0","title":"BaseActivity"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/-base-activity/#constructors","text":"Name Summary <init> BaseActivity() BaseActivity(contentLayoutId: Int )","title":"Constructors"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/-base-activity/#properties","text":"Name Summary coroutineContext open val coroutineContext: CoroutineContext","title":"Properties"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/-base-activity/#functions","text":"Name Summary onDestroy open fun onDestroy(): Unit","title":"Functions"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/-base-activity/-init-/","text":"presentation / cz.eman.kaal.presentation.activity / BaseActivity / <init> <init> BaseActivity() BaseActivity(@LayoutRes contentLayoutId: Int )","title":" init "},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/-base-activity/-init-/#init","text":"BaseActivity() BaseActivity(@LayoutRes contentLayoutId: Int )","title":"&lt;init&gt;"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/-base-activity/coroutine-context/","text":"presentation / cz.eman.kaal.presentation.activity / BaseActivity / coroutineContext coroutineContext open val coroutineContext: CoroutineContext","title":"Coroutine context"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/-base-activity/coroutine-context/#coroutinecontext","text":"open val coroutineContext: CoroutineContext","title":"coroutineContext"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/-base-activity/on-destroy/","text":"presentation / cz.eman.kaal.presentation.activity / BaseActivity / onDestroy onDestroy protected open fun onDestroy(): Unit","title":"On destroy"},{"location":"0.x/presentation/cz.eman.kaal.presentation.activity/-base-activity/on-destroy/#ondestroy","text":"protected open fun onDestroy(): Unit","title":"onDestroy"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/","text":"presentation / cz.eman.kaal.presentation.dialog Package cz.eman.kaal.presentation.dialog Types Name Summary BaseDialogFragment abstract class BaseDialogFragment : DialogFragment, CoroutineScope","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/#package-czemankaalpresentationdialog","text":"","title":"Package cz.eman.kaal.presentation.dialog"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/#types","text":"Name Summary BaseDialogFragment abstract class BaseDialogFragment : DialogFragment, CoroutineScope","title":"Types"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/","text":"presentation / cz.eman.kaal.presentation.dialog / BaseDialogFragment BaseDialogFragment abstract class BaseDialogFragment : DialogFragment, CoroutineScope Author vsouhrada (vaclav.souhrada@eman.cz) See Also DialogFragment Since 0.1.0 Constructors Name Summary <init> BaseDialogFragment() Properties Name Summary coroutineContext open val coroutineContext: CoroutineContext Functions Name Summary onDestroy open fun onDestroy(): Unit Extension Functions Name Summary withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/#basedialogfragment","text":"abstract class BaseDialogFragment : DialogFragment, CoroutineScope Author vsouhrada (vaclav.souhrada@eman.cz) See Also DialogFragment Since 0.1.0","title":"BaseDialogFragment"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/#constructors","text":"Name Summary <init> BaseDialogFragment()","title":"Constructors"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/#properties","text":"Name Summary coroutineContext open val coroutineContext: CoroutineContext","title":"Properties"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/#functions","text":"Name Summary onDestroy open fun onDestroy(): Unit","title":"Functions"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/#extension-functions","text":"Name Summary withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Extension Functions"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/-init-/","text":"presentation / cz.eman.kaal.presentation.dialog / BaseDialogFragment / <init> <init> BaseDialogFragment() Author vsouhrada (vaclav.souhrada@eman.cz) See Also DialogFragment Since 0.1.0","title":" init "},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/-init-/#init","text":"BaseDialogFragment() Author vsouhrada (vaclav.souhrada@eman.cz) See Also DialogFragment Since 0.1.0","title":"&lt;init&gt;"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/coroutine-context/","text":"presentation / cz.eman.kaal.presentation.dialog / BaseDialogFragment / coroutineContext coroutineContext open val coroutineContext: CoroutineContext","title":"Coroutine context"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/coroutine-context/#coroutinecontext","text":"open val coroutineContext: CoroutineContext","title":"coroutineContext"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/on-destroy/","text":"presentation / cz.eman.kaal.presentation.dialog / BaseDialogFragment / onDestroy onDestroy open fun onDestroy(): Unit","title":"On destroy"},{"location":"0.x/presentation/cz.eman.kaal.presentation.dialog/-base-dialog-fragment/on-destroy/#ondestroy","text":"open fun onDestroy(): Unit","title":"onDestroy"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/","text":"presentation / cz.eman.kaal.presentation.fragment Package cz.eman.kaal.presentation.fragment Types Name Summary BaseFragment abstract class BaseFragment : Fragment, CoroutineScope Extensions for External Classes Name Summary androidx.fragment.app.Fragment Functions Name Summary argument fun <T : Any > argument(): FragmentPropertyDelegate <T> withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/#package-czemankaalpresentationfragment","text":"","title":"Package cz.eman.kaal.presentation.fragment"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/#types","text":"Name Summary BaseFragment abstract class BaseFragment : Fragment, CoroutineScope","title":"Types"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/#extensions-for-external-classes","text":"Name Summary androidx.fragment.app.Fragment","title":"Extensions for External Classes"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/#functions","text":"Name Summary argument fun <T : Any > argument(): FragmentPropertyDelegate <T> withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Functions"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/argument/","text":"presentation / cz.eman.kaal.presentation.fragment / argument argument fun <T : Any > argument(): FragmentPropertyDelegate <T> Since 0.2.0","title":"Argument"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/argument/#argument","text":"fun <T : Any > argument(): FragmentPropertyDelegate <T> Since 0.2.0","title":"argument"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/with-args/","text":"presentation / cz.eman.kaal.presentation.fragment / withArgs withArgs inline fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T An extension function to put arguments ( Bundle ) to your Fragment . Since 0.2.0","title":"With args"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/with-args/#withargs","text":"inline fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T An extension function to put arguments ( Bundle ) to your Fragment . Since 0.2.0","title":"withArgs"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/","text":"presentation / cz.eman.kaal.presentation.fragment / BaseFragment BaseFragment abstract class BaseFragment : Fragment, CoroutineScope Author vsouhrada (vaclav.souhrada@eman.cz) See Also Fragment Since 0.1.0 Constructors Name Summary <init> BaseFragment() BaseFragment(contentLayoutId: Int ) Properties Name Summary coroutineContext open val coroutineContext: CoroutineContext Functions Name Summary onDestroy open fun onDestroy(): Unit Extension Functions Name Summary withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/#basefragment","text":"abstract class BaseFragment : Fragment, CoroutineScope Author vsouhrada (vaclav.souhrada@eman.cz) See Also Fragment Since 0.1.0","title":"BaseFragment"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/#constructors","text":"Name Summary <init> BaseFragment() BaseFragment(contentLayoutId: Int )","title":"Constructors"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/#properties","text":"Name Summary coroutineContext open val coroutineContext: CoroutineContext","title":"Properties"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/#functions","text":"Name Summary onDestroy open fun onDestroy(): Unit","title":"Functions"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/#extension-functions","text":"Name Summary withArgs An extension function to put arguments ( Bundle ) to your Fragment . fun <T : Fragment> T.withArgs(argsBuilder: Bundle .() -> Unit ): T","title":"Extension Functions"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/-init-/","text":"presentation / cz.eman.kaal.presentation.fragment / BaseFragment / <init> <init> BaseFragment() BaseFragment(@LayoutRes contentLayoutId: Int )","title":" init "},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/-init-/#init","text":"BaseFragment() BaseFragment(@LayoutRes contentLayoutId: Int )","title":"&lt;init&gt;"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/coroutine-context/","text":"presentation / cz.eman.kaal.presentation.fragment / BaseFragment / coroutineContext coroutineContext open val coroutineContext: CoroutineContext","title":"Coroutine context"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/coroutine-context/#coroutinecontext","text":"open val coroutineContext: CoroutineContext","title":"coroutineContext"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/on-destroy/","text":"presentation / cz.eman.kaal.presentation.fragment / BaseFragment / onDestroy onDestroy open fun onDestroy(): Unit","title":"On destroy"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/-base-fragment/on-destroy/#ondestroy","text":"open fun onDestroy(): Unit","title":"onDestroy"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/androidx.fragment.app.-fragment/","text":"presentation / cz.eman.kaal.presentation.fragment / androidx.fragment.app.Fragment Extensions for androidx.fragment.app.Fragment Name Summary findOptional fun <T : View > Fragment.findOptional(id: Int ): T?","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/androidx.fragment.app.-fragment/#extensions-for-androidxfragmentappfragment","text":"Name Summary findOptional fun <T : View > Fragment.findOptional(id: Int ): T?","title":"Extensions for androidx.fragment.app.Fragment"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/androidx.fragment.app.-fragment/find-optional/","text":"presentation / cz.eman.kaal.presentation.fragment / androidx.fragment.app.Fragment / findOptional findOptional fun <reified T : View > Fragment.findOptional(id: Int ): T? Since 0.2.0","title":"Find optional"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment/androidx.fragment.app.-fragment/find-optional/#findoptional","text":"fun <reified T : View > Fragment.findOptional(id: Int ): T? Since 0.2.0","title":"findOptional"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/","text":"presentation / cz.eman.kaal.presentation.fragment.property Package cz.eman.kaal.presentation.fragment.property Types Name Summary FragmentPropertyDelegate Easier way how to handle fragment's arguments Bundle by using this delegate class FragmentPropertyDelegate<T : Any > : ReadWriteProperty <Fragment, T>","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/#package-czemankaalpresentationfragmentproperty","text":"","title":"Package cz.eman.kaal.presentation.fragment.property"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/#types","text":"Name Summary FragmentPropertyDelegate Easier way how to handle fragment's arguments Bundle by using this delegate class FragmentPropertyDelegate<T : Any > : ReadWriteProperty <Fragment, T>","title":"Types"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/","text":"presentation / cz.eman.kaal.presentation.fragment.property / FragmentPropertyDelegate FragmentPropertyDelegate class FragmentPropertyDelegate<T : Any > : ReadWriteProperty <Fragment, T> Easier way how to handle fragment's arguments Bundle by using this delegate Inspired by Adam Powell and his talk on Google I/O 2017. Author vsouhrada (vaclav.souhrada@eman.cz) See Also kotlin.properties.ReadWriteProperty Fragment Since 0.2.0 Constructors Name Summary <init> Easier way how to handle fragment's arguments Bundle by using this delegate FragmentPropertyDelegate() Functions Name Summary getValue operator fun getValue(thisRef: Fragment, property: KProperty <*>): T setValue operator fun setValue(thisRef: Fragment, property: KProperty <*>, value: T): Unit","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/#fragmentpropertydelegate","text":"class FragmentPropertyDelegate<T : Any > : ReadWriteProperty <Fragment, T> Easier way how to handle fragment's arguments Bundle by using this delegate Inspired by Adam Powell and his talk on Google I/O 2017. Author vsouhrada (vaclav.souhrada@eman.cz) See Also kotlin.properties.ReadWriteProperty Fragment Since 0.2.0","title":"FragmentPropertyDelegate"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/#constructors","text":"Name Summary <init> Easier way how to handle fragment's arguments Bundle by using this delegate FragmentPropertyDelegate()","title":"Constructors"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/#functions","text":"Name Summary getValue operator fun getValue(thisRef: Fragment, property: KProperty <*>): T setValue operator fun setValue(thisRef: Fragment, property: KProperty <*>, value: T): Unit","title":"Functions"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/-init-/","text":"presentation / cz.eman.kaal.presentation.fragment.property / FragmentPropertyDelegate / <init> <init> FragmentPropertyDelegate() Easier way how to handle fragment's arguments Bundle by using this delegate Inspired by Adam Powell and his talk on Google I/O 2017. Author vsouhrada (vaclav.souhrada@eman.cz) See Also kotlin.properties.ReadWriteProperty Fragment Since 0.2.0","title":" init "},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/-init-/#init","text":"FragmentPropertyDelegate() Easier way how to handle fragment's arguments Bundle by using this delegate Inspired by Adam Powell and his talk on Google I/O 2017. Author vsouhrada (vaclav.souhrada@eman.cz) See Also kotlin.properties.ReadWriteProperty Fragment Since 0.2.0","title":"&lt;init&gt;"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/get-value/","text":"presentation / cz.eman.kaal.presentation.fragment.property / FragmentPropertyDelegate / getValue getValue operator fun getValue(thisRef: Fragment, property: KProperty <*>): T","title":"Get value"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/get-value/#getvalue","text":"operator fun getValue(thisRef: Fragment, property: KProperty <*>): T","title":"getValue"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/set-value/","text":"presentation / cz.eman.kaal.presentation.fragment.property / FragmentPropertyDelegate / setValue setValue operator fun setValue(thisRef: Fragment, property: KProperty <*>, value: T): Unit","title":"Set value"},{"location":"0.x/presentation/cz.eman.kaal.presentation.fragment.property/-fragment-property-delegate/set-value/#setvalue","text":"operator fun setValue(thisRef: Fragment, property: KProperty <*>, value: T): Unit","title":"setValue"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/","text":"presentation / cz.eman.kaal.presentation.lifecycle Package cz.eman.kaal.presentation.lifecycle Types Name Summary SingleLiveEvent A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. class SingleLiveEvent<T> : MutableLiveData<T>","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/#package-czemankaalpresentationlifecycle","text":"","title":"Package cz.eman.kaal.presentation.lifecycle"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/#types","text":"Name Summary SingleLiveEvent A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. class SingleLiveEvent<T> : MutableLiveData<T>","title":"Types"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/","text":"presentation / cz.eman.kaal.presentation.lifecycle / SingleLiveEvent SingleLiveEvent class SingleLiveEvent<T> : MutableLiveData<T> A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. This avoids a common problem with events: on configuration change (like rotation) an update can be emitted if the observer is active. This LiveData only calls the observable if there's an explicit call to setValue() or call(). Note that only one observer is going to be notified of changes. Based on the Google Sample Architecture app Since 0.6.0 Constructors Name Summary <init> A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. SingleLiveEvent() Functions Name Summary call Used for cases where T is Void, to make calls cleaner. fun call(): Unit observe fun observe(owner: LifecycleOwner, observer: Observer<in T>): Unit setValue fun setValue(t: T?): Unit","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/#singleliveevent","text":"class SingleLiveEvent<T> : MutableLiveData<T> A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. This avoids a common problem with events: on configuration change (like rotation) an update can be emitted if the observer is active. This LiveData only calls the observable if there's an explicit call to setValue() or call(). Note that only one observer is going to be notified of changes. Based on the Google Sample Architecture app Since 0.6.0","title":"SingleLiveEvent"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/#constructors","text":"Name Summary <init> A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. SingleLiveEvent()","title":"Constructors"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/#functions","text":"Name Summary call Used for cases where T is Void, to make calls cleaner. fun call(): Unit observe fun observe(owner: LifecycleOwner, observer: Observer<in T>): Unit setValue fun setValue(t: T?): Unit","title":"Functions"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/-init-/","text":"presentation / cz.eman.kaal.presentation.lifecycle / SingleLiveEvent / <init> <init> SingleLiveEvent() A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. This avoids a common problem with events: on configuration change (like rotation) an update can be emitted if the observer is active. This LiveData only calls the observable if there's an explicit call to setValue() or call(). Note that only one observer is going to be notified of changes. Based on the Google Sample Architecture app Since 0.6.0","title":" init "},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/-init-/#init","text":"SingleLiveEvent() A lifecycle-aware observable that sends only new updates after subscription, used for events like navigation and Snackbar messages. This avoids a common problem with events: on configuration change (like rotation) an update can be emitted if the observer is active. This LiveData only calls the observable if there's an explicit call to setValue() or call(). Note that only one observer is going to be notified of changes. Based on the Google Sample Architecture app Since 0.6.0","title":"&lt;init&gt;"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/call/","text":"presentation / cz.eman.kaal.presentation.lifecycle / SingleLiveEvent / call call @MainThread fun call(): Unit Used for cases where T is Void, to make calls cleaner.","title":"Call"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/call/#call","text":"@MainThread fun call(): Unit Used for cases where T is Void, to make calls cleaner.","title":"call"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/observe/","text":"presentation / cz.eman.kaal.presentation.lifecycle / SingleLiveEvent / observe observe @MainThread fun observe(owner: LifecycleOwner, observer: Observer<in T>): Unit","title":"Observe"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/observe/#observe","text":"@MainThread fun observe(owner: LifecycleOwner, observer: Observer<in T>): Unit","title":"observe"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/set-value/","text":"presentation / cz.eman.kaal.presentation.lifecycle / SingleLiveEvent / setValue setValue @MainThread fun setValue(t: T?): Unit","title":"Set value"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle/-single-live-event/set-value/#setvalue","text":"@MainThread fun setValue(t: T?): Unit","title":"setValue"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels Package cz.eman.kaal.presentation.lifecycle.channels Types Name Summary LifecycleEventChannel ReceiveChannel emitting Lifecycle.Event updates class LifecycleEventChannel : LifecycleObserver, ReceiveChannel<Event> Extensions for External Classes Name Summary androidx.lifecycle.LifecycleOwner kotlinx.coroutines.channels.ReceiveChannel Functions Name Summary bothNotNull Inline check that A and B value are not null fun <A, B> bothNotNull(a: A?, b: B?, action: (A, B) -> Unit ): Unit combineLatest Combine two ReceiveChannel and create one ReceiveChannel emitting Pair value of the latest values. fun <A, B> combineLatest(channelA: ReceiveChannel<A>, channelB: ReceiveChannel<B>, scope: CoroutineScope, context: CoroutineContext = Dispatchers.Unconfined, capacity: Int = Channel.UNLIMITED): ReceiveChannel< Pair <A, B>> isActiveLifecycleEvent Check if Lifecycle.Event indicates active state fun isActiveLifecycleEvent(event: Event): Boolean","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/#package-czemankaalpresentationlifecyclechannels","text":"","title":"Package cz.eman.kaal.presentation.lifecycle.channels"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/#types","text":"Name Summary LifecycleEventChannel ReceiveChannel emitting Lifecycle.Event updates class LifecycleEventChannel : LifecycleObserver, ReceiveChannel<Event>","title":"Types"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/#extensions-for-external-classes","text":"Name Summary androidx.lifecycle.LifecycleOwner kotlinx.coroutines.channels.ReceiveChannel","title":"Extensions for External Classes"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/#functions","text":"Name Summary bothNotNull Inline check that A and B value are not null fun <A, B> bothNotNull(a: A?, b: B?, action: (A, B) -> Unit ): Unit combineLatest Combine two ReceiveChannel and create one ReceiveChannel emitting Pair value of the latest values. fun <A, B> combineLatest(channelA: ReceiveChannel<A>, channelB: ReceiveChannel<B>, scope: CoroutineScope, context: CoroutineContext = Dispatchers.Unconfined, capacity: Int = Channel.UNLIMITED): ReceiveChannel< Pair <A, B>> isActiveLifecycleEvent Check if Lifecycle.Event indicates active state fun isActiveLifecycleEvent(event: Event): Boolean","title":"Functions"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/both-not-null/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / bothNotNull bothNotNull inline fun <A, B> bothNotNull(a: A?, b: B?, action: (A, B) -> Unit ): Unit Inline check that A and B value are not null","title":"Both not null"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/both-not-null/#bothnotnull","text":"inline fun <A, B> bothNotNull(a: A?, b: B?, action: (A, B) -> Unit ): Unit Inline check that A and B value are not null","title":"bothNotNull"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/combine-latest/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / combineLatest combineLatest fun <A, B> combineLatest(channelA: ReceiveChannel<A>, channelB: ReceiveChannel<B>, scope: CoroutineScope, context: CoroutineContext = Dispatchers.Unconfined, capacity: Int = Channel.UNLIMITED): ReceiveChannel< Pair <A, B>> Combine two ReceiveChannel and create one ReceiveChannel emitting Pair value of the latest values. Parameters channelA - * ReceiveChannel emitting first value of Pair channelB - * ReceiveChannel emitting second value of Pair scope - * CoroutineScope context - * CoroutineContext capacity - * channel capacity","title":"Combine latest"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/combine-latest/#combinelatest","text":"fun <A, B> combineLatest(channelA: ReceiveChannel<A>, channelB: ReceiveChannel<B>, scope: CoroutineScope, context: CoroutineContext = Dispatchers.Unconfined, capacity: Int = Channel.UNLIMITED): ReceiveChannel< Pair <A, B>> Combine two ReceiveChannel and create one ReceiveChannel emitting Pair value of the latest values.","title":"combineLatest"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/combine-latest/#parameters","text":"channelA - * ReceiveChannel emitting first value of Pair channelB - * ReceiveChannel emitting second value of Pair scope - * CoroutineScope context - * CoroutineContext capacity - * channel capacity","title":"Parameters"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/is-active-lifecycle-event/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / isActiveLifecycleEvent isActiveLifecycleEvent fun isActiveLifecycleEvent(event: Event): Boolean Check if Lifecycle.Event indicates active state Return true when event indicates active state","title":"Is active lifecycle event"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/is-active-lifecycle-event/#isactivelifecycleevent","text":"fun isActiveLifecycleEvent(event: Event): Boolean Check if Lifecycle.Event indicates active state Return true when event indicates active state","title":"isActiveLifecycleEvent"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / LifecycleEventChannel LifecycleEventChannel class LifecycleEventChannel : LifecycleObserver, ReceiveChannel<Event> ReceiveChannel emitting Lifecycle.Event updates Constructors Name Summary <init> LifecycleEventChannel(lifecycleOwner: LifecycleOwner, capacity: Int = Channel.RENDEZVOUS, scope: CoroutineScope) Functions Name Summary cancel fun cancel(): Unit onAny fun onAny(source: LifecycleOwner, event: Event): Unit","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/#lifecycleeventchannel","text":"class LifecycleEventChannel : LifecycleObserver, ReceiveChannel<Event> ReceiveChannel emitting Lifecycle.Event updates","title":"LifecycleEventChannel"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/#constructors","text":"Name Summary <init> LifecycleEventChannel(lifecycleOwner: LifecycleOwner, capacity: Int = Channel.RENDEZVOUS, scope: CoroutineScope)","title":"Constructors"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/#functions","text":"Name Summary cancel fun cancel(): Unit onAny fun onAny(source: LifecycleOwner, event: Event): Unit","title":"Functions"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/-init-/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / LifecycleEventChannel / <init> <init> LifecycleEventChannel(lifecycleOwner: LifecycleOwner, capacity: Int = Channel.RENDEZVOUS, scope: CoroutineScope)","title":" init "},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/-init-/#init","text":"LifecycleEventChannel(lifecycleOwner: LifecycleOwner, capacity: Int = Channel.RENDEZVOUS, scope: CoroutineScope)","title":"&lt;init&gt;"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/cancel/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / LifecycleEventChannel / cancel cancel @AnyThread fun cancel(): Unit","title":"Cancel"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/cancel/#cancel","text":"@AnyThread fun cancel(): Unit","title":"cancel"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/on-any/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / LifecycleEventChannel / onAny onAny @MainThread fun onAny(source: LifecycleOwner, event: Event): Unit","title":"On any"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/-lifecycle-event-channel/on-any/#onany","text":"@MainThread fun onAny(source: LifecycleOwner, event: Event): Unit","title":"onAny"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/androidx.lifecycle.-lifecycle-owner/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / androidx.lifecycle.LifecycleOwner Extensions for androidx.lifecycle.LifecycleOwner Name Summary observeData Simple way to start observing data with Lifecycle aware ReceiveChannel suspend fun <T> LifecycleOwner.observeData(channel: ReceiveChannel<T>, body: (T) -> Unit ): Unit","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/androidx.lifecycle.-lifecycle-owner/#extensions-for-androidxlifecyclelifecycleowner","text":"Name Summary observeData Simple way to start observing data with Lifecycle aware ReceiveChannel suspend fun <T> LifecycleOwner.observeData(channel: ReceiveChannel<T>, body: (T) -> Unit ): Unit","title":"Extensions for androidx.lifecycle.LifecycleOwner"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/androidx.lifecycle.-lifecycle-owner/observe-data/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / androidx.lifecycle.LifecycleOwner / observeData observeData suspend fun <T> LifecycleOwner.observeData(channel: ReceiveChannel<T>, body: (T) -> Unit ): Unit Simple way to start observing data with Lifecycle aware ReceiveChannel","title":"Observe data"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/androidx.lifecycle.-lifecycle-owner/observe-data/#observedata","text":"suspend fun <T> LifecycleOwner.observeData(channel: ReceiveChannel<T>, body: (T) -> Unit ): Unit Simple way to start observing data with Lifecycle aware ReceiveChannel","title":"observeData"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/kotlinx.coroutines.channels.-receive-channel/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / kotlinx.coroutines.channels.ReceiveChannel Extensions for kotlinx.coroutines.channels.ReceiveChannel Name Summary withLifecycle Transfer ReceiveChannel to Lifecycle aware ReceiveChannel fun <T> ReceiveChannel<T>.withLifecycle(lifecycleOwner: LifecycleOwner, scope: CoroutineScope, context: CoroutineContext = Unconfined, capacity: Int = Channel.CONFLATED): ReceiveChannel<T>","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/kotlinx.coroutines.channels.-receive-channel/#extensions-for-kotlinxcoroutineschannelsreceivechannel","text":"Name Summary withLifecycle Transfer ReceiveChannel to Lifecycle aware ReceiveChannel fun <T> ReceiveChannel<T>.withLifecycle(lifecycleOwner: LifecycleOwner, scope: CoroutineScope, context: CoroutineContext = Unconfined, capacity: Int = Channel.CONFLATED): ReceiveChannel<T>","title":"Extensions for kotlinx.coroutines.channels.ReceiveChannel"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/kotlinx.coroutines.channels.-receive-channel/with-lifecycle/","text":"presentation / cz.eman.kaal.presentation.lifecycle.channels / kotlinx.coroutines.channels.ReceiveChannel / withLifecycle withLifecycle fun <T> ReceiveChannel<T>.withLifecycle(lifecycleOwner: LifecycleOwner, scope: CoroutineScope, context: CoroutineContext = Unconfined, capacity: Int = Channel.CONFLATED): ReceiveChannel<T> Transfer ReceiveChannel to Lifecycle aware ReceiveChannel","title":"With lifecycle"},{"location":"0.x/presentation/cz.eman.kaal.presentation.lifecycle.channels/kotlinx.coroutines.channels.-receive-channel/with-lifecycle/#withlifecycle","text":"fun <T> ReceiveChannel<T>.withLifecycle(lifecycleOwner: LifecycleOwner, scope: CoroutineScope, context: CoroutineContext = Unconfined, capacity: Int = Channel.CONFLATED): ReceiveChannel<T> Transfer ReceiveChannel to Lifecycle aware ReceiveChannel","title":"withLifecycle"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/","text":"presentation / cz.eman.kaal.presentation.view Package cz.eman.kaal.presentation.view Types Name Summary DslTextWatcher A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. class DslTextWatcher : TextWatcher Extensions for External Classes Name Summary android.view.View android.view.ViewGroup android.widget.TextView","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/#package-czemankaalpresentationview","text":"","title":"Package cz.eman.kaal.presentation.view"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/#types","text":"Name Summary DslTextWatcher A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. class DslTextWatcher : TextWatcher","title":"Types"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/#extensions-for-external-classes","text":"Name Summary android.view.View android.view.ViewGroup android.widget.TextView","title":"Extensions for External Classes"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher DslTextWatcher class DslTextWatcher : TextWatcher A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. Since 0.3.0 See Also TextWatcher Constructors Name Summary <init> A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. DslTextWatcher() Properties Name Summary isBlank val TextView .isBlank: Boolean isEmpty val TextView .isEmpty: Boolean isNotBlank val TextView .isNotBlank: Boolean isNotEmpty val TextView .isNotEmpty: Boolean Functions Name Summary afterTextChanged fun afterTextChanged(s: Editable ?): Unit fun afterTextChanged(listener: ( Editable ?) -> Unit ): Unit beforeTextChanged fun beforeTextChanged(s: CharSequence ?, start: Int , count: Int , after: Int ): Unit fun beforeTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit onTextChanged fun onTextChanged(s: CharSequence ?, start: Int , before: Int , count: Int ): Unit fun onTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/#dsltextwatcher","text":"class DslTextWatcher : TextWatcher A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. Since 0.3.0 See Also TextWatcher","title":"DslTextWatcher"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/#constructors","text":"Name Summary <init> A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. DslTextWatcher()","title":"Constructors"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/#properties","text":"Name Summary isBlank val TextView .isBlank: Boolean isEmpty val TextView .isEmpty: Boolean isNotBlank val TextView .isNotBlank: Boolean isNotEmpty val TextView .isNotEmpty: Boolean","title":"Properties"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/#functions","text":"Name Summary afterTextChanged fun afterTextChanged(s: Editable ?): Unit fun afterTextChanged(listener: ( Editable ?) -> Unit ): Unit beforeTextChanged fun beforeTextChanged(s: CharSequence ?, start: Int , count: Int , after: Int ): Unit fun beforeTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit onTextChanged fun onTextChanged(s: CharSequence ?, start: Int , before: Int , count: Int ): Unit fun onTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"Functions"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/-init-/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / <init> <init> DslTextWatcher() A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. Since 0.3.0 See Also TextWatcher","title":" init "},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/-init-/#init","text":"DslTextWatcher() A DSL wrapper around the TextWatcher . Byt this use can avoid to using a boilerplate code when you need to be notified if text has been changed or before change action and so on. Since 0.3.0 See Also TextWatcher","title":"&lt;init&gt;"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/after-text-changed/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / afterTextChanged afterTextChanged fun afterTextChanged(s: Editable ?): Unit fun afterTextChanged(listener: ( Editable ?) -> Unit ): Unit","title":"After text changed"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/after-text-changed/#aftertextchanged","text":"fun afterTextChanged(s: Editable ?): Unit fun afterTextChanged(listener: ( Editable ?) -> Unit ): Unit","title":"afterTextChanged"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/before-text-changed/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / beforeTextChanged beforeTextChanged fun beforeTextChanged(s: CharSequence ?, start: Int , count: Int , after: Int ): Unit fun beforeTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"Before text changed"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/before-text-changed/#beforetextchanged","text":"fun beforeTextChanged(s: CharSequence ?, start: Int , count: Int , after: Int ): Unit fun beforeTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"beforeTextChanged"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-blank/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / isBlank isBlank val TextView .isBlank: Boolean","title":"Is blank"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-blank/#isblank","text":"val TextView .isBlank: Boolean","title":"isBlank"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-empty/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / isEmpty isEmpty val TextView .isEmpty: Boolean","title":"Is empty"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-empty/#isempty","text":"val TextView .isEmpty: Boolean","title":"isEmpty"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-not-blank/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / isNotBlank isNotBlank val TextView .isNotBlank: Boolean","title":"Is not blank"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-not-blank/#isnotblank","text":"val TextView .isNotBlank: Boolean","title":"isNotBlank"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-not-empty/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / isNotEmpty isNotEmpty val TextView .isNotEmpty: Boolean","title":"Is not empty"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/is-not-empty/#isnotempty","text":"val TextView .isNotEmpty: Boolean","title":"isNotEmpty"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/on-text-changed/","text":"presentation / cz.eman.kaal.presentation.view / DslTextWatcher / onTextChanged onTextChanged fun onTextChanged(s: CharSequence ?, start: Int , before: Int , count: Int ): Unit fun onTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"On text changed"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/-dsl-text-watcher/on-text-changed/#ontextchanged","text":"fun onTextChanged(s: CharSequence ?, start: Int , before: Int , count: Int ): Unit fun onTextChanged(listener: ( CharSequence ?, Int , Int , Int ) -> Unit ): Unit","title":"onTextChanged"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view/","text":"presentation / cz.eman.kaal.presentation.view / android.view.View Extensions for android.view.View Name Summary hide By calling this function you can make your view component View.GONE . fun View .hide(): Unit hideKeyboard Hide a keyboard from current view. fun View .hideKeyboard(): Unit invisible By calling this function you can make your view component invisible ( View.INVISIBLE ) fun View .invisible(): Unit show By calling this function you can make your view component visible ( View.VISIBLE ) fun View .show(): Unit","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view/#extensions-for-androidviewview","text":"Name Summary hide By calling this function you can make your view component View.GONE . fun View .hide(): Unit hideKeyboard Hide a keyboard from current view. fun View .hideKeyboard(): Unit invisible By calling this function you can make your view component invisible ( View.INVISIBLE ) fun View .invisible(): Unit show By calling this function you can make your view component visible ( View.VISIBLE ) fun View .show(): Unit","title":"Extensions for android.view.View"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view/hide-keyboard/","text":"presentation / cz.eman.kaal.presentation.view / android.view.View / hideKeyboard hideKeyboard fun View .hideKeyboard(): Unit Hide a keyboard from current view. Since 0.3.0","title":"Hide keyboard"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view/hide-keyboard/#hidekeyboard","text":"fun View .hideKeyboard(): Unit Hide a keyboard from current view. Since 0.3.0","title":"hideKeyboard"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view/hide/","text":"presentation / cz.eman.kaal.presentation.view / android.view.View / hide hide fun View .hide(): Unit By calling this function you can make your view component View.GONE . Since 0.3.0","title":"Hide"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view/hide/#hide","text":"fun View .hide(): Unit By calling this function you can make your view component View.GONE . Since 0.3.0","title":"hide"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view/invisible/","text":"presentation / cz.eman.kaal.presentation.view / android.view.View / invisible invisible fun View .invisible(): Unit By calling this function you can make your view component invisible ( View.INVISIBLE ) Since 0.3.0","title":"Invisible"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view/invisible/#invisible","text":"fun View .invisible(): Unit By calling this function you can make your view component invisible ( View.INVISIBLE ) Since 0.3.0","title":"invisible"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view/show/","text":"presentation / cz.eman.kaal.presentation.view / android.view.View / show show fun View .show(): Unit By calling this function you can make your view component visible ( View.VISIBLE ) Since 0.3.0","title":"Show"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view/show/#show","text":"fun View .show(): Unit By calling this function you can make your view component visible ( View.VISIBLE ) Since 0.3.0","title":"show"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view-group/","text":"presentation / cz.eman.kaal.presentation.view / android.view.ViewGroup Extensions for android.view.ViewGroup Name Summary inflate Allows calls like: fun ViewGroup .inflate(layout: Int , attachToRoot: Boolean = false): View","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view-group/#extensions-for-androidviewviewgroup","text":"Name Summary inflate Allows calls like: fun ViewGroup .inflate(layout: Int , attachToRoot: Boolean = false): View","title":"Extensions for android.view.ViewGroup"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view-group/inflate/","text":"presentation / cz.eman.kaal.presentation.view / android.view.ViewGroup / inflate inflate fun ViewGroup .inflate(@LayoutRes layout: Int , attachToRoot: Boolean = false): View Allows calls like: viewGroup.inflate(R.layout.exchange_rates_view) Since 0.6.0","title":"Inflate"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.view.-view-group/inflate/#inflate","text":"fun ViewGroup .inflate(@LayoutRes layout: Int , attachToRoot: Boolean = false): View Allows calls like: viewGroup.inflate(R.layout.exchange_rates_view) Since 0.6.0","title":"inflate"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.widget.-text-view/","text":"presentation / cz.eman.kaal.presentation.view / android.widget.TextView Extensions for android.widget.TextView Name Summary textWatcher fun TextView .textWatcher(init: DslTextWatcher .() -> Unit ): Unit","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.widget.-text-view/#extensions-for-androidwidgettextview","text":"Name Summary textWatcher fun TextView .textWatcher(init: DslTextWatcher .() -> Unit ): Unit","title":"Extensions for android.widget.TextView"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.widget.-text-view/text-watcher/","text":"presentation / cz.eman.kaal.presentation.view / android.widget.TextView / textWatcher textWatcher inline fun TextView .textWatcher(init: DslTextWatcher .() -> Unit ): Unit Since 0.3.0","title":"Text watcher"},{"location":"0.x/presentation/cz.eman.kaal.presentation.view/android.widget.-text-view/text-watcher/#textwatcher","text":"inline fun TextView .textWatcher(init: DslTextWatcher .() -> Unit ): Unit Since 0.3.0","title":"textWatcher"},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/","text":"presentation / cz.eman.kaal.presentation.viewmodel Package cz.eman.kaal.presentation.viewmodel Types Name Summary BaseAndroidViewModel abstract class BaseAndroidViewModel : AndroidViewModel, KoinComponent BaseViewModel abstract class BaseViewModel : ViewModel, KoinComponent","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/#package-czemankaalpresentationviewmodel","text":"","title":"Package cz.eman.kaal.presentation.viewmodel"},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/#types","text":"Name Summary BaseAndroidViewModel abstract class BaseAndroidViewModel : AndroidViewModel, KoinComponent BaseViewModel abstract class BaseViewModel : ViewModel, KoinComponent","title":"Types"},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/-base-android-view-model/","text":"presentation / cz.eman.kaal.presentation.viewmodel / BaseAndroidViewModel BaseAndroidViewModel abstract class BaseAndroidViewModel : AndroidViewModel, KoinComponent Author eMan s.r.o (info@eman.cz) See Also AndroidViewModel KoinComponent Constructors Name Summary <init> BaseAndroidViewModel(application: Application )","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/-base-android-view-model/#baseandroidviewmodel","text":"abstract class BaseAndroidViewModel : AndroidViewModel, KoinComponent Author eMan s.r.o (info@eman.cz) See Also AndroidViewModel KoinComponent","title":"BaseAndroidViewModel"},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/-base-android-view-model/#constructors","text":"Name Summary <init> BaseAndroidViewModel(application: Application )","title":"Constructors"},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/-base-android-view-model/-init-/","text":"presentation / cz.eman.kaal.presentation.viewmodel / BaseAndroidViewModel / <init> <init> BaseAndroidViewModel(application: Application ) Author eMan s.r.o (info@eman.cz) See Also AndroidViewModel KoinComponent","title":" init "},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/-base-android-view-model/-init-/#init","text":"BaseAndroidViewModel(application: Application ) Author eMan s.r.o (info@eman.cz) See Also AndroidViewModel KoinComponent","title":"&lt;init&gt;"},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/-base-view-model/","text":"presentation / cz.eman.kaal.presentation.viewmodel / BaseViewModel BaseViewModel abstract class BaseViewModel : ViewModel, KoinComponent Author eMan s.r.o (info@eman.cz) See Also ViewModel KoinComponent Constructors Name Summary <init> BaseViewModel()","title":"Index"},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/-base-view-model/#baseviewmodel","text":"abstract class BaseViewModel : ViewModel, KoinComponent Author eMan s.r.o (info@eman.cz) See Also ViewModel KoinComponent","title":"BaseViewModel"},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/-base-view-model/#constructors","text":"Name Summary <init> BaseViewModel()","title":"Constructors"},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/-base-view-model/-init-/","text":"presentation / cz.eman.kaal.presentation.viewmodel / BaseViewModel / <init> <init> BaseViewModel() Author eMan s.r.o (info@eman.cz) See Also ViewModel KoinComponent","title":" init "},{"location":"0.x/presentation/cz.eman.kaal.presentation.viewmodel/-base-view-model/-init-/#init","text":"BaseViewModel() Author eMan s.r.o (info@eman.cz) See Also ViewModel KoinComponent","title":"&lt;init&gt;"}]}